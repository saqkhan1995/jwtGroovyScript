{\rtf1\ansi\ansicpg1252\cocoartf2761
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\froman\fcharset0 Times-Roman;\f1\froman\fcharset0 Times-Bold;\f2\fmodern\fcharset0 Courier;
\f3\fnil\fcharset0 AppleColorEmoji;\f4\fnil\fcharset0 HelveticaNeue;\f5\fnil\fcharset0 LucidaGrande;
\f6\fmodern\fcharset0 Courier-Bold;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;\red109\green109\blue109;\red0\green0\blue0;
\red179\green179\blue179;\red0\green0\blue233;}
{\*\expandedcolortbl;;\cssrgb\c0\c0\c0;\cssrgb\c50196\c50196\c50196;\cssrgb\c0\c0\c0\c84706;
\cssrgb\c75294\c75294\c75294;\cssrgb\c0\c0\c93333;}
{\*\listtable{\list\listtemplateid1\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid1\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid1}
{\list\listtemplateid2\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid101\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid2}
{\list\listtemplateid3\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid201\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid3}
{\list\listtemplateid4\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid301\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid4}
{\list\listtemplateid5\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid401\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid5}
{\list\listtemplateid6\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid501\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid6}
{\list\listtemplateid7\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid601\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid7}
{\list\listtemplateid8\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid701\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid8}
{\list\listtemplateid9\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid801\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid9}
{\list\listtemplateid10\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid901\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid10}
{\list\listtemplateid11\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid1001\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid11}
{\list\listtemplateid12\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid1101\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid12}
{\list\listtemplateid13\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid1201\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{circle\}}{\leveltext\leveltemplateid1202\'01\uc0\u9702 ;}{\levelnumbers;}\fi-360\li1440\lin1440 }{\listname ;}\listid13}
{\list\listtemplateid14\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid1301\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{circle\}}{\leveltext\leveltemplateid1302\'01\uc0\u9702 ;}{\levelnumbers;}\fi-360\li1440\lin1440 }{\listname ;}\listid14}
{\list\listtemplateid15\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid1401\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid15}
{\list\listtemplateid16\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid1501\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid16}
{\list\listtemplateid17\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid1601\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid17}
{\list\listtemplateid18\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid1701\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid18}
{\list\listtemplateid19\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid1801\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid19}
{\list\listtemplateid20\listhybrid{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{decimal\}}{\leveltext\leveltemplateid1901\'01\'00;}{\levelnumbers\'01;}\fi-360\li720\lin720 }{\listname ;}\listid20}
{\list\listtemplateid21\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid2001\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid21}
{\list\listtemplateid22\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid2101\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid22}
{\list\listtemplateid23\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid2201\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid23}
{\list\listtemplateid24\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid2301\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid24}
{\list\listtemplateid25\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid2401\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid25}
{\list\listtemplateid26\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid2501\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid26}
{\list\listtemplateid27\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid2601\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid27}
{\list\listtemplateid28\listhybrid{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{decimal\}}{\leveltext\leveltemplateid2701\'01\'00;}{\levelnumbers\'01;}\fi-360\li720\lin720 }{\listname ;}\listid28}
{\list\listtemplateid29\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid2801\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid29}
{\list\listtemplateid30\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid2901\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid30}
{\list\listtemplateid31\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid3001\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid31}
{\list\listtemplateid32\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid3101\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid32}
{\list\listtemplateid33\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid3201\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid33}
{\list\listtemplateid34\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid3301\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid34}
{\list\listtemplateid35\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid3401\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid35}
{\list\listtemplateid36\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid3501\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid36}
{\list\listtemplateid37\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid3601\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid37}
{\list\listtemplateid38\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid3701\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid38}
{\list\listtemplateid39\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid3801\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid39}
{\list\listtemplateid40\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid3901\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid40}
{\list\listtemplateid41\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid4001\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{circle\}}{\leveltext\leveltemplateid4002\'01\uc0\u9702 ;}{\levelnumbers;}\fi-360\li1440\lin1440 }{\listname ;}\listid41}
{\list\listtemplateid42\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid4101\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid42}
{\list\listtemplateid43\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid4201\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{circle\}}{\leveltext\leveltemplateid4202\'01\uc0\u9702 ;}{\levelnumbers;}\fi-360\li1440\lin1440 }{\listname ;}\listid43}
{\list\listtemplateid44\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid4301\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid44}
{\list\listtemplateid45\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid4401\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid45}
{\list\listtemplateid46\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid4501\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid46}
{\list\listtemplateid47\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid4601\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid47}
{\list\listtemplateid48\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid4701\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{circle\}}{\leveltext\leveltemplateid4702\'01\uc0\u9702 ;}{\levelnumbers;}\fi-360\li1440\lin1440 }{\listname ;}\listid48}
{\list\listtemplateid49\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid4801\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid49}
{\list\listtemplateid50\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid4901\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{circle\}}{\leveltext\leveltemplateid4902\'01\uc0\u9702 ;}{\levelnumbers;}\fi-360\li1440\lin1440 }{\listname ;}\listid50}
{\list\listtemplateid51\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid5001\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{circle\}}{\leveltext\leveltemplateid5002\'01\uc0\u9702 ;}{\levelnumbers;}\fi-360\li1440\lin1440 }{\listname ;}\listid51}
{\list\listtemplateid52\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid5101\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid52}
{\list\listtemplateid53\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid5201\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid53}
{\list\listtemplateid54\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid5301\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{circle\}}{\leveltext\leveltemplateid5302\'01\uc0\u9702 ;}{\levelnumbers;}\fi-360\li1440\lin1440 }{\listname ;}\listid54}
{\list\listtemplateid55\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid5401\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid55}
{\list\listtemplateid56\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid5501\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid56}
{\list\listtemplateid57\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid5601\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid57}
{\list\listtemplateid58\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid5701\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid58}
{\list\listtemplateid59\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid5801\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid59}
{\list\listtemplateid60\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid5901\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid60}
{\list\listtemplateid61\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid6001\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid61}
{\list\listtemplateid62\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid6101\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid62}
{\list\listtemplateid63\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid6201\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid63}
{\list\listtemplateid64\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid6301\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid64}
{\list\listtemplateid65\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid6401\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid65}
{\list\listtemplateid66\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid6501\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid66}
{\list\listtemplateid67\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid6601\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid67}
{\list\listtemplateid68\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid6701\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid68}}
{\*\listoverridetable{\listoverride\listid1\listoverridecount0\ls1}{\listoverride\listid2\listoverridecount0\ls2}{\listoverride\listid3\listoverridecount0\ls3}{\listoverride\listid4\listoverridecount0\ls4}{\listoverride\listid5\listoverridecount0\ls5}{\listoverride\listid6\listoverridecount0\ls6}{\listoverride\listid7\listoverridecount0\ls7}{\listoverride\listid8\listoverridecount0\ls8}{\listoverride\listid9\listoverridecount0\ls9}{\listoverride\listid10\listoverridecount0\ls10}{\listoverride\listid11\listoverridecount0\ls11}{\listoverride\listid12\listoverridecount0\ls12}{\listoverride\listid13\listoverridecount0\ls13}{\listoverride\listid14\listoverridecount0\ls14}{\listoverride\listid15\listoverridecount0\ls15}{\listoverride\listid16\listoverridecount0\ls16}{\listoverride\listid17\listoverridecount0\ls17}{\listoverride\listid18\listoverridecount0\ls18}{\listoverride\listid19\listoverridecount0\ls19}{\listoverride\listid20\listoverridecount0\ls20}{\listoverride\listid21\listoverridecount0\ls21}{\listoverride\listid22\listoverridecount0\ls22}{\listoverride\listid23\listoverridecount0\ls23}{\listoverride\listid24\listoverridecount0\ls24}{\listoverride\listid25\listoverridecount0\ls25}{\listoverride\listid26\listoverridecount0\ls26}{\listoverride\listid27\listoverridecount0\ls27}{\listoverride\listid28\listoverridecount0\ls28}{\listoverride\listid29\listoverridecount0\ls29}{\listoverride\listid30\listoverridecount0\ls30}{\listoverride\listid31\listoverridecount0\ls31}{\listoverride\listid32\listoverridecount0\ls32}{\listoverride\listid33\listoverridecount0\ls33}{\listoverride\listid34\listoverridecount0\ls34}{\listoverride\listid35\listoverridecount0\ls35}{\listoverride\listid36\listoverridecount0\ls36}{\listoverride\listid37\listoverridecount0\ls37}{\listoverride\listid38\listoverridecount0\ls38}{\listoverride\listid39\listoverridecount0\ls39}{\listoverride\listid40\listoverridecount0\ls40}{\listoverride\listid41\listoverridecount0\ls41}{\listoverride\listid42\listoverridecount0\ls42}{\listoverride\listid43\listoverridecount0\ls43}{\listoverride\listid44\listoverridecount0\ls44}{\listoverride\listid45\listoverridecount0\ls45}{\listoverride\listid46\listoverridecount0\ls46}{\listoverride\listid47\listoverridecount0\ls47}{\listoverride\listid48\listoverridecount0\ls48}{\listoverride\listid49\listoverridecount0\ls49}{\listoverride\listid50\listoverridecount0\ls50}{\listoverride\listid51\listoverridecount0\ls51}{\listoverride\listid52\listoverridecount0\ls52}{\listoverride\listid53\listoverridecount0\ls53}{\listoverride\listid54\listoverridecount0\ls54}{\listoverride\listid55\listoverridecount0\ls55}{\listoverride\listid56\listoverridecount0\ls56}{\listoverride\listid57\listoverridecount0\ls57}{\listoverride\listid58\listoverridecount0\ls58}{\listoverride\listid59\listoverridecount0\ls59}{\listoverride\listid60\listoverridecount0\ls60}{\listoverride\listid61\listoverridecount0\ls61}{\listoverride\listid62\listoverridecount0\ls62}{\listoverride\listid63\listoverridecount0\ls63}{\listoverride\listid64\listoverridecount0\ls64}{\listoverride\listid65\listoverridecount0\ls65}{\listoverride\listid66\listoverridecount0\ls66}{\listoverride\listid67\listoverridecount0\ls67}{\listoverride\listid68\listoverridecount0\ls68}}
\paperw11900\paperh16840\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\partightenfactor0

\f0\fs24 \cf0 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 15. 
\f1\b How do you handle permission pop-ups and system alerts in Appium?\
\
How do you validate data inside native and hybrid mobile apps? \
Typicallly WebViews\
\pard\pardeftab720\partightenfactor0

\f0\b0 \cf0 you\'92re asked to test an app with both native and embedded web views. How do you handle this in Appium?
\f1\b \strokec2 \
\pard\pardeftab720\partightenfactor0
\cf0 \strokec2 \
\pard\pardeftab720\partightenfactor0

\f0\b0 \cf0 How do you identify flaky tests in Appium?\
\
What\'92s your experience with integrating Appium tests into a CI/CD pipeline?\
\
How do you report test results and metrics?\
\
How do you debug a failed Appium test?\
\
How do you handle waits in your test framework?\
\
\pard\pardeftab720\sa319\partightenfactor0

\f1\b \cf0 \strokec2 You have an unstable test that passes locally but fails on Jenkins. How would you troubleshoot?\
\
\pard\pardeftab720\partightenfactor0

\f0\b0 \cf0 \strokec2 A login test that was previously passing is now failing only on Android 14 devices. What steps do you take to debug it?
\f1\b \strokec2 \
\pard\pardeftab720\sa240\partightenfactor0

\f0\b0 \cf0 \
\pard\pardeftab720\sa319\partightenfactor0

\f1\b \cf0 How would you design a test to validate deep links in a mobile app?\
\pard\pardeftab720\sa240\partightenfactor0

\f0\b0 \cf0 \
\pard\pardeftab720\partightenfactor0
\cf0 \strokec2 How do you handle app relaunch or background-foreground scenarios in Appium?\
\
\pard\pardeftab720\partightenfactor0
\cf0 Your test case sometimes fails because the app takes longer to load certain pages. How do you handle such flakiness?\
\
Your Appium suite is taking over 2 hours to execute. How would you optimize execution time?\
\
test is failing intermittently with 
\f2\fs26 \strokec2 NoSuchElementException
\f0\fs24 \strokec2  even though the element exists. What could be the causes and solutions?\
\pard\pardeftab720\partightenfactor0
\cf0 \
\
\pard\pardeftab720\partightenfactor0
\cf0 You need to validate network API responses during mobile test execution. How would you do it?\
\
\
How do you manage multiple devices or parallel execution in Appium?\
\
What capabilities are essential when setting up an Appium driver for Android?\
\
How do you handle dynamic elements in Appium?\
\
How do you perform actions like swipe, scroll, or tap in Appium?\
\
\
\pard\pardeftab720\sa319\partightenfactor0

\f1\b \cf0 \strokec2 How do you manage test data in your automation framework?\
\pard\pardeftab720\partightenfactor0

\f0\b0 \cf0 \strokec2 What are some common challenges in mobile automation and how do you handle them?\
\
15. 
\f1\b \strokec2 How do you handle permission pop-ups and system alerts in Appium?\
\

\f0\b0 \strokec2 How do you identify flaky tests in Appium?\
\
\
JAVA - \
What is the difference between Abstract Classes and Interfaces? When would you use one over the other?\
\
What are functional interfaces in Java? How are they useful in test automation?\
\
What is the difference between 
\f2\fs26 \strokec2 final
\f0\fs24 \strokec2 , 
\f2\fs26 \strokec2 finally\
\

\f0\fs24 \strokec2 Explain the difference between 
\f2\fs26 \strokec2 HashMap
\f0\fs24 \strokec2 , 
\f2\fs26 \strokec2 LinkedHashMap\
\

\f0\fs24 \strokec2 How would you use 
\f2\fs26 \strokec2 enum
\f0\fs24 \strokec2  in an automation project?\
\
How does Java\'92s exception hierarchy work? What\'92s your strategy for exception handling in test code?\
\
\
What\'92s your experience with integrating Appium tests into a CI/CD pipeline?\
\
\
\
\
\'97\'97\'97\'97\'97\'97\
\pard\pardeftab720\sa240\partightenfactor0
\cf0 \strokec2 Here\'92s a list of 
\f1\b \strokec2 SDET (Software Development Engineer in Test)
\f0\b0 \strokec2  interview questions with 
\f1\b \strokec2 answers tailored for someone with 5.7 years of experience
\f0\b0 \strokec2  in Java (interfaces, collections, exception handling) and mobile automation using Appium:\
\pard\pardeftab720\partightenfactor0
\cf3 \strokec3 \
\pard\pardeftab720\sa280\partightenfactor0

\f3\fs28 \cf0 \strokec2 \uc0\u9881 \u65039 
\f1\b  Core Java Interview Questions\
\pard\pardeftab720\partightenfactor0

\f0\b0\fs24 \cf3 \strokec3 \
\pard\pardeftab720\sa319\partightenfactor0

\f1\b \cf0 \strokec2 1. What are interfaces in Java, and how have you used them in your automation framework?\
\pard\pardeftab720\sa240\partightenfactor0
\cf0 \strokec2 Answer:
\f0\b0 \strokec2 \uc0\u8232 Interfaces in Java define a contract that implementing classes must follow. In automation, I use interfaces to promote code reusability and flexibility. For example, I define an 
\f2\fs26 \strokec2 IDriverManager
\f0\fs24 \strokec2  interface with methods like 
\f2\fs26 \strokec2 startDriver()
\f0\fs24 \strokec2  and 
\f2\fs26 \strokec2 stopDriver()
\f0\fs24 \strokec2 , and then implement it for Android and iOS separately. This helps in managing platform-specific logic cleanly.\
\pard\pardeftab720\partightenfactor0
\cf3 \strokec3 \
\pard\pardeftab720\sa319\partightenfactor0

\f1\b \cf0 \strokec2 2. What is the difference between List, Set, and Map in Java Collections?\
\pard\pardeftab720\sa240\partightenfactor0
\cf0 \strokec2 Answer:
\f0\b0 \strokec2 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls1\ilvl0
\f1\b \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 List
\f0\b0 : Allows duplicates and maintains insertion order (e.g., 
\f2\fs26 ArrayList
\f0\fs24 ).\
\ls1\ilvl0
\f1\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Set
\f0\b0 : Does not allow duplicates and may or may not maintain order (
\f2\fs26 HashSet
\f0\fs24  vs 
\f2\fs26 LinkedHashSet
\f0\fs24 ).\
\ls1\ilvl0
\f1\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Map
\f0\b0 : Stores key-value pairs, where keys are unique (e.g., 
\f2\fs26 HashMap
\f0\fs24 , 
\f2\fs26 TreeMap
\f0\fs24 ).\
\pard\pardeftab720\sa240\partightenfactor0
\cf0 \strokec2 In automation, I often use:\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls2\ilvl0
\f2\fs26 \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 List<WebElement>
\f0\fs24  for handling multiple similar elements.\
\ls2\ilvl0
\f2\fs26 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Map<String, String>
\f0\fs24  to manage test data or capabilities.\
\pard\pardeftab720\partightenfactor0
\cf3 \strokec3 \
\pard\pardeftab720\sa319\partightenfactor0

\f1\b \cf0 \strokec2 3. How do you handle exceptions in Java, and how does it apply to Appium testing?\
\pard\pardeftab720\sa240\partightenfactor0
\cf0 \strokec2 Answer:
\f0\b0 \strokec2 \uc0\u8232 I use try-catch blocks to handle runtime exceptions like 
\f2\fs26 \strokec2 NoSuchElementException
\f0\fs24 \strokec2 . For Appium tests, I often wrap element interactions in utility methods with proper exception handling to avoid test failures due to dynamic app behavior.\
\pard\pardeftab720\partightenfactor0

\f2\fs26 \cf0 \strokec2 java\
\pard\pardeftab720\partightenfactor0

\f4\fs22 \cf4 \cb5 \strokec4 CopyEdit
\f2\fs26 \cf0 \cb1 \strokec2 \
public WebElement findElementWithWait(By locator) \{\
    try \{\
        return new WebDriverWait(driver, Duration.ofSeconds(10))\
                 .until(ExpectedConditions.visibilityOfElementLocated(locator));\
    \} catch (TimeoutException e) \{\
        throw new RuntimeException("Element not found: " + locator);\
    \}\
\}\
\pard\pardeftab720\partightenfactor0

\f0\fs24 \cf3 \strokec3 \
\pard\pardeftab720\sa319\partightenfactor0

\f1\b \cf0 \strokec2 4. What are Checked vs Unchecked exceptions? Give examples.\
\pard\pardeftab720\sa240\partightenfactor0
\cf0 \strokec2 Answer:
\f0\b0 \strokec2 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls3\ilvl0
\f1\b \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Checked
\f0\b0 : Checked at compile time. E.g., 
\f2\fs26 IOException
\f0\fs24 , 
\f2\fs26 SQLException
\f0\fs24 .\
\ls3\ilvl0
\f1\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Unchecked
\f0\b0 : Occur at runtime. E.g., 
\f2\fs26 NullPointerException
\f0\fs24 , 
\f2\fs26 ArrayIndexOutOfBoundsException
\f0\fs24 .\
\pard\pardeftab720\sa240\partightenfactor0
\cf0 \strokec2 In test frameworks, unchecked exceptions often come from WebDriver or test logic flaws.\
\pard\pardeftab720\partightenfactor0
\cf3 \strokec3 \
\pard\pardeftab720\sa280\partightenfactor0

\f3\fs28 \cf0 \strokec2 \uc0\u55357 \u56561 
\f1\b  Appium & Mobile Automation Questions\
\pard\pardeftab720\partightenfactor0

\f0\b0\fs24 \cf3 \strokec3 \
\pard\pardeftab720\sa319\partightenfactor0

\f1\b \cf0 \strokec2 5. Explain your Appium test architecture.\
\pard\pardeftab720\sa240\partightenfactor0
\cf0 \strokec2 Answer:
\f0\b0 \strokec2 \uc0\u8232 My Appium framework follows the 
\f1\b \strokec2 Page Object Model (POM)
\f0\b0 \strokec2  with 
\f1\b \strokec2 TestNG
\f0\b0 \strokec2  or 
\f1\b \strokec2 JUnit
\f0\b0 \strokec2 . I structure it with:\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls4\ilvl0\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Base test class for setup/teardown\
\ls4\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 DriverFactory for device management\
\ls4\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Utility classes for reusability (swipe, scroll, waits)\
\ls4\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Page classes for screen elements and actions\
\pard\pardeftab720\sa240\partightenfactor0
\cf0 \strokec2 I also integrate with CI/CD pipelines like Jenkins and use tools like 
\f1\b \strokec2 Allure
\f0\b0 \strokec2  for reporting.\
\pard\pardeftab720\partightenfactor0
\cf3 \strokec3 \
\pard\pardeftab720\sa319\partightenfactor0

\f1\b \cf0 \strokec2 6. How do you manage multiple devices or parallel execution in Appium?\
\pard\pardeftab720\sa240\partightenfactor0
\cf0 \strokec2 Answer:
\f0\b0 \strokec2 \uc0\u8232 I use 
\f1\b \strokec2 ThreadLocal WebDriver
\f0\b0 \strokec2  instances and generate dynamic Appium server ports and device UDIDs. I configure capabilities using TestNG\'92s 
\f2\fs26 \strokec2 @DataProvider
\f0\fs24 \strokec2  or parameterization and run them in parallel using TestNG XML or Gradle tasks.\
\pard\pardeftab720\partightenfactor0
\cf3 \strokec3 \
\pard\pardeftab720\sa319\partightenfactor0

\f1\b \cf0 \strokec2 7. What capabilities are essential when setting up an Appium driver for Android?\
\pard\pardeftab720\sa240\partightenfactor0
\cf0 \strokec2 Answer:
\f0\b0 \strokec2 \
\pard\pardeftab720\partightenfactor0

\f2\fs26 \cf0 \strokec2 java\
\pard\pardeftab720\partightenfactor0

\f4\fs22 \cf4 \cb5 \strokec4 CopyEdit
\f2\fs26 \cf0 \cb1 \strokec2 \
DesiredCapabilities caps = new DesiredCapabilities();\
caps.setCapability("platformName", "Android");\
caps.setCapability("deviceName", "emulator-5554");\
caps.setCapability("appPackage", "com.example");\
caps.setCapability("appActivity", "com.example.MainActivity");\
caps.setCapability("automationName", "UiAutomator2");\
\pard\pardeftab720\sa240\partightenfactor0

\f0\fs24 \cf0 \strokec2 I also use 
\f2\fs26 \strokec2 noReset
\f0\fs24 \strokec2 , 
\f2\fs26 \strokec2 autoGrantPermissions
\f0\fs24 \strokec2 , and 
\f2\fs26 \strokec2 newCommandTimeout
\f0\fs24 \strokec2  for better stability.\
\pard\pardeftab720\partightenfactor0
\cf3 \strokec3 \
\pard\pardeftab720\sa319\partightenfactor0

\f1\b \cf0 \strokec2 8. How do you handle dynamic elements in Appium?\
\pard\pardeftab720\sa240\partightenfactor0
\cf0 \strokec2 Answer:
\f0\b0 \strokec2 \uc0\u8232 I use strategies like:\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls5\ilvl0\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 XPath with contains or starts-with\
\ls5\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Android UIAutomator selectors\
\ls5\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Explicit waits to wait for presence or visibility\
\pard\pardeftab720\sa240\partightenfactor0
\cf0 \strokec2 Example:\
\pard\pardeftab720\partightenfactor0

\f2\fs26 \cf0 \strokec2 java\
\pard\pardeftab720\partightenfactor0

\f4\fs22 \cf4 \cb5 \strokec4 CopyEdit
\f2\fs26 \cf0 \cb1 \strokec2 \
driver.findElement(By.xpath("//*[contains(@text, 'Login')]")).click();\
\pard\pardeftab720\partightenfactor0

\f0\fs24 \cf3 \strokec3 \
\pard\pardeftab720\sa319\partightenfactor0

\f1\b \cf0 \strokec2 9. How do you perform actions like swipe, scroll, or tap in Appium?\
\pard\pardeftab720\sa240\partightenfactor0
\cf0 \strokec2 Answer:
\f0\b0 \strokec2 \uc0\u8232 Using the 
\f2\fs26 \strokec2 TouchAction
\f0\fs24 \strokec2  class (deprecated) or 
\f2\fs26 \strokec2 MobileElement
\f0\fs24 \strokec2  gestures in newer versions:\
\pard\pardeftab720\partightenfactor0

\f2\fs26 \cf0 \strokec2 java\
\pard\pardeftab720\partightenfactor0

\f4\fs22 \cf4 \cb5 \strokec4 CopyEdit
\f2\fs26 \cf0 \cb1 \strokec2 \
new TouchAction(driver)\
  .press(PointOption.point(500, 1000))\
  .waitAction(WaitOptions.waitOptions(Duration.ofSeconds(1)))\
  .moveTo(PointOption.point(500, 300))\
  .release()\
  .perform();\
\pard\pardeftab720\sa240\partightenfactor0

\f0\fs24 \cf0 \strokec2 Or using 
\f2\fs26 \strokec2 driver.executeScript("mobile: swipe", ...)
\f0\fs24 \strokec2  in W3C-compatible actions.\
\pard\pardeftab720\partightenfactor0
\cf3 \strokec3 \
\pard\pardeftab720\sa280\partightenfactor0

\f3\fs28 \cf0 \strokec2 \uc0\u55358 \u56810 
\f1\b  Test Automation Strategy\
\pard\pardeftab720\partightenfactor0

\f0\b0\fs24 \cf3 \strokec3 \
\pard\pardeftab720\sa319\partightenfactor0

\f1\b \cf0 \strokec2 10. How do you manage test data in your automation framework?\
\pard\pardeftab720\sa240\partightenfactor0
\cf0 \strokec2 Answer:
\f0\b0 \strokec2 \uc0\u8232 I use external sources like:\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls6\ilvl0\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Excel or CSV files using Apache POI\
\ls6\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 JSON/YAML files for structured data\
\ls6\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 TestNG 
\f2\fs26 @DataProvider
\f0\fs24  for parameterized testing\
\pard\pardeftab720\sa240\partightenfactor0
\cf0 \strokec2 I also follow data-driven principles to decouple test logic from test data.\
\pard\pardeftab720\partightenfactor0
\cf3 \strokec3 \
\pard\pardeftab720\sa319\partightenfactor0

\f1\b \cf0 \strokec2 11. What are some common challenges in mobile automation and how do you handle them?\
\pard\pardeftab720\sa240\partightenfactor0
\cf0 \strokec2 Answer:
\f0\b0 \strokec2 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls7\ilvl0
\f1\b \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Device instability
\f0\b0 : I use ADB commands and Appium server checks to restart sessions.\
\ls7\ilvl0
\f1\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Dynamic UI
\f0\b0 : Use better locators and waits.\
\ls7\ilvl0
\f1\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 App state
\f0\b0 : Clear app data or use 
\f2\fs26 noReset
\f0\fs24  judiciously.\
\ls7\ilvl0
\f1\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Test flakiness
\f0\b0 : Retry logic and better synchronization.\
\pard\pardeftab720\partightenfactor0
\cf3 \strokec3 \
\pard\pardeftab720\sa240\partightenfactor0
\cf0 \strokec2 Let me know if you'd like questions specific to:\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls8\ilvl0
\f1\b \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 iOS automation
\f0\b0 \
\ls8\ilvl0
\f1\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 CI/CD integration
\f0\b0 \
\ls8\ilvl0
\f1\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 BDD frameworks like Cucumber
\f0\b0 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls8\ilvl0\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Or a 
\f1\b mock interview style
\f0\b0  practice.\
\pard\pardeftab720\qc\partightenfactor0

\f4\fs22 \cf4 \strokec4 \
\
\pard\pardeftab720\sa332\partightenfactor0

\f1\b\fs20 \cf0 \strokec2 You said:\
\pard\pardeftab720\partightenfactor0

\f0\b0\fs24 \cf0 \strokec2 more\
\
\pard\pardeftab720\sa419\partightenfactor0

\f1\b\fs18 \cf0 \strokec2 ChatGPT said:\
\pard\pardeftab720\sa240\partightenfactor0

\f0\b0\fs24 \cf0 \strokec2 Here are 
\f1\b \strokec2 more advanced and scenario-based SDET interview questions and answers
\f0\b0 \strokec2  for someone with 
\f1\b \strokec2 5.7 years of experience
\f0\b0 \strokec2 , focusing on 
\f1\b \strokec2 Java, Appium, and automation frameworks
\f0\b0 \strokec2 :\
\pard\pardeftab720\partightenfactor0
\cf3 \strokec3 \
\pard\pardeftab720\sa280\partightenfactor0

\f3\fs28 \cf0 \strokec2 \uc0\u9749 
\f1\b  Advanced Java & OOP Concepts\
\pard\pardeftab720\partightenfactor0

\f0\b0\fs24 \cf3 \strokec3 \
\pard\pardeftab720\sa319\partightenfactor0

\f1\b \cf0 \strokec2 12. What is the difference between Abstract Classes and Interfaces? When would you use one over the other?\
\pard\pardeftab720\sa240\partightenfactor0
\cf0 \strokec2 Answer:
\f0\b0 \strokec2 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls9\ilvl0
\f1\b \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Abstract Class
\f0\b0 : Can have both abstract and concrete methods. Useful when you need shared code among subclasses.\
\ls9\ilvl0
\f1\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Interface
\f0\b0 : All methods are abstract by default (Java 7); since Java 8, interfaces can have default and static methods.\
\pard\pardeftab720\sa240\partightenfactor0

\f1\b \cf0 Use Interface
\f0\b0 \strokec2  when you need multiple inheritance of type.\uc0\u8232 
\f1\b \strokec2 Use Abstract Class
\f0\b0 \strokec2  when you need shared code and controlled inheritance.\
\pard\pardeftab720\partightenfactor0
\cf3 \strokec3 \
\pard\pardeftab720\sa319\partightenfactor0

\f1\b \cf0 \strokec2 13. Explain method overloading vs method overriding with real-world test automation examples.\
\pard\pardeftab720\sa240\partightenfactor0
\cf0 \strokec2 Answer:
\f0\b0 \strokec2 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls10\ilvl0
\f1\b \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Overloading
\f0\b0 : Same method name, different parameters (compile-time polymorphism).\uc0\u8232 
\f2\fs26 java\uc0\u8232 
\f4\fs22 \cf4 \cb5 \strokec4 CopyEdit
\f2\fs26 \cf0 \cb1 \strokec2 \uc0\u8232 \u8232 \u8232 public void login(String user, String pass) \{ \}\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls10\ilvl0\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 public void login(String token) \{ \}\
\ls10\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \uc0\u8232 \u8232 
\f0\fs24 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls10\ilvl0
\f1\b \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Overriding
\f0\b0 : Subclass redefines the parent method.\uc0\u8232 
\f2\fs26 java\uc0\u8232 
\f4\fs22 \cf4 \cb5 \strokec4 CopyEdit
\f2\fs26 \cf0 \cb1 \strokec2 \uc0\u8232 \u8232 \u8232 class BaseTest \{ void setup() \{ \} \}\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls10\ilvl0\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 class AndroidTest extends BaseTest \{\
\ls10\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2     @Override void setup() \{ // Android-specific setup \}\
\ls10\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \}\
\ls10\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \uc0\u8232 \u8232 
\f0\fs24 \
\pard\pardeftab720\sa240\partightenfactor0
\cf0 \strokec2 Used for platform-specific test setups in the same framework.\
\pard\pardeftab720\partightenfactor0
\cf3 \strokec3 \
\pard\pardeftab720\sa319\partightenfactor0

\f1\b \cf0 \strokec2 14. How does Java handle memory management? How is it relevant in long-running test executions?\
\pard\pardeftab720\sa240\partightenfactor0
\cf0 \strokec2 Answer:
\f0\b0 \strokec2 \uc0\u8232 Java uses automatic 
\f1\b \strokec2 Garbage Collection
\f0\b0 \strokec2  to manage memory. However, in test automation:\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls11\ilvl0\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Improper handling of 
\f2\fs26 WebDriver
\f0\fs24  or 
\f2\fs26 MobileElement
\f0\fs24  references can cause memory leaks.\
\ls11\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 I ensure driver quits and unused objects are nullified post-test.\
\ls11\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 For large test suites, I monitor heap usage using JVM parameters (
\f2\fs26 -Xms
\f0\fs24 , 
\f2\fs26 -Xmx
\f0\fs24 ) and tools like VisualVM.\
\pard\pardeftab720\partightenfactor0
\cf3 \strokec3 \
\pard\pardeftab720\sa280\partightenfactor0

\f3\fs28 \cf0 \strokec2 \uc0\u55357 \u56561 
\f1\b  Appium Deep Dive\
\pard\pardeftab720\partightenfactor0

\f0\b0\fs24 \cf3 \strokec3 \
\pard\pardeftab720\sa319\partightenfactor0

\f1\b \cf0 \strokec2 15. How do you handle permission pop-ups and system alerts in Appium?\
\pard\pardeftab720\sa240\partightenfactor0
\cf0 \strokec2 Answer:
\f0\b0 \strokec2 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls12\ilvl0\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 For Android: Use capabilities like 
\f2\fs26 autoGrantPermissions: true
\f0\fs24 .\
\ls12\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 For iOS: Use 
\f2\fs26 autoAcceptAlerts: true
\f0\fs24 , or handle alerts using:\
\pard\pardeftab720\partightenfactor0

\f2\fs26 \cf0 java\
\pard\pardeftab720\partightenfactor0

\f4\fs22 \cf4 \cb5 \strokec4 CopyEdit
\f2\fs26 \cf0 \cb1 \strokec2 \
if (driver.isAlertPresent()) \{\
    driver.switchTo().alert().accept();\
\}\
\pard\pardeftab720\sa240\partightenfactor0

\f0\fs24 \cf0 \strokec2 Also, I use Appium commands or ADB shell commands to manually grant permissions for some edge cases.\
\pard\pardeftab720\partightenfactor0
\cf3 \strokec3 \
\pard\pardeftab720\sa319\partightenfactor0

\f1\b \cf0 \strokec2 16. How do you validate data inside native and hybrid mobile apps?\
\pard\pardeftab720\sa240\partightenfactor0
\cf0 \strokec2 Answer:
\f0\b0 \strokec2 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls13\ilvl0\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 For 
\f1\b native apps
\f0\b0 : Use Appium locators (
\f2\fs26 By.id
\f0\fs24 , 
\f2\fs26 By.xpath
\f0\fs24 ) to fetch text and validate with assertions.\
\ls13\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 For 
\f1\b hybrid apps
\f0\b0 :\
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\sa240\partightenfactor0
\ls13\ilvl1\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f5 \uc0\u9702 
\f0 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Switch context to WebView using 
\f2\fs26 driver.getContextHandles()
\f0\fs24  and 
\f2\fs26 driver.context("WEBVIEW_xyz")
\f0\fs24 \
\ls13\ilvl1\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f5 \uc0\u9702 
\f0 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Use standard Selenium locators to interact with WebView elements.\
\pard\pardeftab720\partightenfactor0
\cf3 \strokec3 \
\pard\pardeftab720\sa319\partightenfactor0

\f1\b \cf0 \strokec2 17. How do you identify flaky tests in Appium?\
\pard\pardeftab720\sa240\partightenfactor0
\cf0 \strokec2 Answer:
\f0\b0 \strokec2 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls14\ilvl0\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Enable retry analyzers to detect inconsistent tests.\
\ls14\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Use tools like 
\f1\b Allure TestOps
\f0\b0  or Jenkins Trends to analyze historical runs.\
\ls14\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Add logs, screenshots, and video capture for debugging.\
\ls14\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Common root causes:\
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\sa240\partightenfactor0
\ls14\ilvl1\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f5 \uc0\u9702 
\f0 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Poor locator strategy\
\ls14\ilvl1\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f5 \uc0\u9702 
\f0 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Timing/synchronization issues\
\ls14\ilvl1\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f5 \uc0\u9702 
\f0 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Environment/device instability\
\pard\pardeftab720\partightenfactor0
\cf3 \strokec3 \
\pard\pardeftab720\sa280\partightenfactor0

\f3\fs28 \cf0 \strokec2 \uc0\u55358 \u56816 
\f1\b  Test Framework & CI/CD Integration\
\pard\pardeftab720\partightenfactor0

\f0\b0\fs24 \cf3 \strokec3 \
\pard\pardeftab720\sa319\partightenfactor0

\f1\b \cf0 \strokec2 18. What\'92s your experience with integrating Appium tests into a CI/CD pipeline?\
\pard\pardeftab720\sa240\partightenfactor0
\cf0 \strokec2 Answer:
\f0\b0 \strokec2 \uc0\u8232 I\'92ve integrated Appium tests into 
\f1\b \strokec2 Jenkins
\f0\b0 \strokec2  and 
\f1\b \strokec2 GitLab CI
\f0\b0 \strokec2  using:\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls15\ilvl0\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Gradle/Maven for build and test execution\
\ls15\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Emulator/device setup via scripts or device farms (Firebase Test Lab, BrowserStack)\
\ls15\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Parallel execution using TestNG\
\ls15\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Artifacts: Test reports (Allure), screenshots, logs pushed as post-build actions\
\pard\pardeftab720\partightenfactor0
\cf3 \strokec3 \
\pard\pardeftab720\sa319\partightenfactor0

\f1\b \cf0 \strokec2 19. Explain your test framework structure.\
\pard\pardeftab720\sa240\partightenfactor0
\cf0 \strokec2 Answer:
\f0\b0 \strokec2 \uc0\u8232 Typical structure:\
\pard\pardeftab720\partightenfactor0

\f2\fs26 \cf0 \strokec2 bash\
\pard\pardeftab720\partightenfactor0

\f4\fs22 \cf4 \cb5 \strokec4 CopyEdit
\f2\fs26 \cf0 \cb1 \strokec2 \
/src/test/java\
    /base\
        BaseTest.java\
        DriverManager.java\
    /pages\
        LoginPage.java\
        HomePage.java\
    /tests\
        LoginTest.java\
        ProfileTest.java\
    /utils\
        WaitUtils.java\
        ConfigReader.java\
/resources\
    config.properties\
    capabilities.json\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls16\ilvl0
\f1\b\fs24 \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Modularized
\f0\b0  with clear separation of concerns\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls16\ilvl0\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Uses 
\f1\b POM
\f0\b0 , utility classes, listeners, and reusable actions\
\pard\pardeftab720\partightenfactor0
\cf3 \strokec3 \
\pard\pardeftab720\sa319\partightenfactor0

\f1\b \cf0 \strokec2 20. How do you report test results and metrics?\
\pard\pardeftab720\sa240\partightenfactor0
\cf0 \strokec2 Answer:
\f0\b0 \strokec2 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls17\ilvl0
\f1\b \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Allure
\f0\b0  for detailed reports (steps, attachments, logs)\
\ls17\ilvl0
\f1\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 ExtentReports
\f0\b0  for UI-friendly custom reports\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls17\ilvl0\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Integration with CI tools for HTML or Slack notifications\
\ls17\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Capture: screenshots, logs, video (e.g., with Appium + ffmpeg)\
\pard\pardeftab720\partightenfactor0
\cf3 \strokec3 \
\pard\pardeftab720\sa280\partightenfactor0

\f3\fs28 \cf0 \strokec2 \uc0\u55357 \u56615 
\f1\b  Utilities & Debugging\
\pard\pardeftab720\partightenfactor0

\f0\b0\fs24 \cf3 \strokec3 \
\pard\pardeftab720\sa319\partightenfactor0

\f1\b \cf0 \strokec2 21. How do you debug a failed Appium test?\
\pard\pardeftab720\sa240\partightenfactor0
\cf0 \strokec2 Answer:
\f0\b0 \strokec2 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls18\ilvl0\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Analyze test logs and stack trace\
\ls18\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Use screenshots and screen recording\
\ls18\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Use ADB logs (
\f2\fs26 adb logcat
\f0\fs24 ) for Android-specific issues\
\ls18\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Reproduce issue manually and inspect locators/UI hierarchy using Appium Inspector or UIAutomatorViewer\
\pard\pardeftab720\partightenfactor0
\cf3 \strokec3 \
\pard\pardeftab720\sa319\partightenfactor0

\f1\b \cf0 \strokec2 22. How do you handle waits in your test framework?\
\pard\pardeftab720\sa240\partightenfactor0
\cf0 \strokec2 Answer:
\f0\b0 \strokec2 \uc0\u8232 I avoid hard waits (
\f2\fs26 \strokec2 Thread.sleep
\f0\fs24 \strokec2 ) and use:\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls19\ilvl0
\f1\b \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Explicit Waits
\f0\b0  via 
\f2\fs26 WebDriverWait
\f0\fs24 \
\ls19\ilvl0
\f1\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Fluent Waits
\f0\b0  for polling behavior\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls19\ilvl0\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Reusable wait utility methods to centralize logic\
\pard\pardeftab720\partightenfactor0
\cf3 \strokec3 \
\pard\pardeftab720\sa240\partightenfactor0
\cf0 \strokec2 Would you like mock scenario questions (e.g., \'93Write code to swipe until an element is found\'94), or framework design questions (e.g., \'93Design an automation framework from scratch\'94)?\
\pard\pardeftab720\qc\partightenfactor0

\f4\fs22 \cf4 \strokec4 \
\pard\pardeftab720\sa332\partightenfactor0

\f1\b\fs20 \cf0 \strokec2 You said:\
\pard\pardeftab720\partightenfactor0

\f0\b0\fs24 \cf0 \strokec2 more\
\
\pard\pardeftab720\sa419\partightenfactor0

\f1\b\fs18 \cf0 \strokec2 ChatGPT said:\
\pard\pardeftab720\sa240\partightenfactor0

\f0\b0\fs24 \cf0 \strokec2 Absolutely! Below are 
\f1\b \strokec2 more advanced and practical interview questions with answers
\f0\b0 \strokec2  specifically tailored for a 
\f1\b \strokec2 Senior SDET (5.7 years)
\f0\b0 \strokec2  with expertise in 
\f1\b \strokec2 Java, Appium, and automation frameworks
\f0\b0 \strokec2 . These focus on 
\f1\b \strokec2 scenarios
\f0\b0 \strokec2 , 
\f1\b \strokec2 design
\f0\b0 \strokec2 , 
\f1\b \strokec2 scalability
\f0\b0 \strokec2 , and 
\f1\b \strokec2 problem-solving
\f0\b0 \strokec2  \'97 areas often explored in mid-to-senior level interviews.\
\pard\pardeftab720\partightenfactor0
\cf3 \strokec3 \
\pard\pardeftab720\sa280\partightenfactor0

\f3\fs28 \cf0 \strokec2 \uc0\u55358 \u56800 
\f1\b  Scenario-Based & Problem-Solving Questions\
\pard\pardeftab720\partightenfactor0

\f0\b0\fs24 \cf3 \strokec3 \
\pard\pardeftab720\sa319\partightenfactor0

\f1\b \cf0 \strokec2 23. You have an unstable test that passes locally but fails on Jenkins. How would you troubleshoot?\
\pard\pardeftab720\sa240\partightenfactor0
\cf0 \strokec2 Answer:
\f0\b0 \strokec2 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls20\ilvl0
\f1\b \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	1	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Check logs
\f0\b0 : Review Jenkins logs, Appium logs, and screenshots.\
\ls20\ilvl0
\f1\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	2	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Environment parity
\f0\b0 : Ensure the local and Jenkins environments have the same dependencies (e.g., Appium server version, SDK, device settings).\
\ls20\ilvl0
\f1\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	3	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Wait issues
\f0\b0 : Add or refine explicit waits.\
\ls20\ilvl0
\f1\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	4	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Device handling
\f0\b0 : If using emulators, ensure clean boot before every test. Use ADB to verify device state.\
\ls20\ilvl0
\f1\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	5	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Retry failed tests
\f0\b0 : Add retry logic via TestNG 
\f2\fs26 IRetryAnalyzer
\f0\fs24  and mark the test as flaky for review.\
\pard\pardeftab720\partightenfactor0
\cf3 \strokec3 \
\pard\pardeftab720\sa319\partightenfactor0

\f1\b \cf0 \strokec2 24. How would you design a test to validate deep links in a mobile app?\
\pard\pardeftab720\sa240\partightenfactor0
\cf0 \strokec2 Answer:
\f0\b0 \strokec2 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls21\ilvl0
\f1\b \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Android
\f0\b0 :\uc0\u8232 
\f2\fs26 bash\uc0\u8232 
\f4\fs22 \cf4 \cb5 \strokec4 CopyEdit
\f2\fs26 \cf0 \cb1 \strokec2 \uc0\u8232 \u8232 \u8232 adb shell am start -W -a android.intent.action.VIEW -d "<deep_link_url>" <app_package>\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls21\ilvl0\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \uc0\u8232 \u8232 
\f0\fs24 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls21\ilvl0
\f1\b \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 iOS
\f0\b0 : Use 
\f2\fs26 driver.executeScript("mobile: deepLink", ...)
\f0\fs24  for XCUITest\
\pard\pardeftab720\sa240\partightenfactor0
\cf0 \strokec2 Then validate landing screen:\
\pard\pardeftab720\partightenfactor0

\f2\fs26 \cf0 \strokec2 java\
\pard\pardeftab720\partightenfactor0

\f4\fs22 \cf4 \cb5 \strokec4 CopyEdit
\f2\fs26 \cf0 \cb1 \strokec2 \
Assert.assertTrue(driver.findElement(By.id("expected_element")).isDisplayed());\
\pard\pardeftab720\sa240\partightenfactor0

\f0\fs24 \cf0 \strokec2 I include this in a utility method and call from the test class.\
\pard\pardeftab720\partightenfactor0
\cf3 \strokec3 \
\pard\pardeftab720\sa319\partightenfactor0

\f1\b \cf0 \strokec2 25. How do you handle app relaunch or background-foreground scenarios in Appium?\
\pard\pardeftab720\sa240\partightenfactor0
\cf0 \strokec2 Answer:
\f0\b0 \strokec2 \
\pard\pardeftab720\partightenfactor0

\f2\fs26 \cf0 \strokec2 java\
\pard\pardeftab720\partightenfactor0

\f4\fs22 \cf4 \cb5 \strokec4 CopyEdit
\f2\fs26 \cf0 \cb1 \strokec2 \
driver.runAppInBackground(Duration.ofSeconds(5)); // Moves app to background\
driver.activateApp("com.example"); // Brings app to foreground\
\pard\pardeftab720\sa240\partightenfactor0

\f0\fs24 \cf0 \strokec2 I create utility methods to simulate user interruptions or background scenarios like incoming calls.\
\pard\pardeftab720\partightenfactor0
\cf3 \strokec3 \
\pard\pardeftab720\sa280\partightenfactor0

\f3\fs28 \cf0 \strokec2 \uc0\u55358 \u56817 
\f1\b  Framework Design & Maintainability\
\pard\pardeftab720\partightenfactor0

\f0\b0\fs24 \cf3 \strokec3 \
\pard\pardeftab720\sa319\partightenfactor0

\f1\b \cf0 \strokec2 26. How would you design a scalable automation framework for a team?\
\pard\pardeftab720\sa240\partightenfactor0
\cf0 \strokec2 Answer:
\f0\b0 \strokec2 \uc0\u8232 Key components:\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls22\ilvl0
\f1\b \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Modular architecture
\f0\b0 : Separate utilities, test data, page actions, and drivers\
\ls22\ilvl0
\f1\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Cross-platform support
\f0\b0 : Common interfaces for Android and iOS\
\ls22\ilvl0
\f1\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Pluggable reporting
\f0\b0 : Allure or ExtentReports\
\ls22\ilvl0
\f1\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Parallel execution
\f0\b0 : Using TestNG or JUnit with dynamic capability loading\
\ls22\ilvl0
\f1\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Test tagging
\f0\b0 : Smoke, Regression, Sanity for flexible pipeline execution\
\ls22\ilvl0
\f1\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 CI ready
\f0\b0 : Jenkins pipeline, Docker containers (if needed)\
\pard\pardeftab720\sa240\partightenfactor0
\cf0 \strokec2 Emphasis on 
\f1\b \strokec2 code readability, reusability, and review standards
\f0\b0 \strokec2 .\
\pard\pardeftab720\partightenfactor0
\cf3 \strokec3 \
\pard\pardeftab720\sa319\partightenfactor0

\f1\b \cf0 \strokec2 27. How do you ensure your tests are maintainable and robust?\
\pard\pardeftab720\sa240\partightenfactor0
\cf0 \strokec2 Answer:
\f0\b0 \strokec2 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls23\ilvl0\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Follow 
\f1\b SOLID principles
\f0\b0  in test framework\
\ls23\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Use 
\f1\b Page Object Model (POM)
\f0\b0  and 
\f1\b DRY (Don't Repeat Yourself)
\f0\b0  principle\
\ls23\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Avoid hard-coded waits and locators\
\ls23\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Keep test steps clear and isolated from test data\
\ls23\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Use meaningful logs and assertions\
\ls23\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Regular refactoring and peer reviews\
\pard\pardeftab720\partightenfactor0
\cf3 \strokec3 \
\pard\pardeftab720\sa280\partightenfactor0

\f3\fs28 \cf0 \strokec2 \uc0\u55356 \u57104 
\f1\b  Cross-Platform & Tooling\
\pard\pardeftab720\partightenfactor0

\f0\b0\fs24 \cf3 \strokec3 \
\pard\pardeftab720\sa319\partightenfactor0

\f1\b \cf0 \strokec2 28. Have you worked with any cloud device farms? How do you run Appium tests there?\
\pard\pardeftab720\sa240\partightenfactor0
\cf0 \strokec2 Answer:
\f0\b0 \strokec2 \uc0\u8232 Yes, I\'92ve used:\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls24\ilvl0
\f1\b \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 BrowserStack
\f0\b0 : Pass 
\f2\fs26 cloud
\f0\fs24  capabilities like 
\f2\fs26 browserstack.user
\f0\fs24 , 
\f2\fs26 device
\f0\fs24 , 
\f2\fs26 os_version
\f0\fs24 , etc.\
\ls24\ilvl0
\f1\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Sauce Labs
\f0\b0 : Similar approach; use remote Appium URLs.\
\ls24\ilvl0
\f1\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Firebase Test Lab
\f0\b0  (for Espresso/XCUITest more often)\
\pard\pardeftab720\sa240\partightenfactor0
\cf0 \strokec2 TestNG config or environment files manage platform-specific configs. Also use 
\f2\fs26 \strokec2 desiredCapabilities.setCapability("app", "bs://<app-id>")
\f0\fs24 \strokec2  for remote apps.\
\pard\pardeftab720\partightenfactor0
\cf3 \strokec3 \
\pard\pardeftab720\sa319\partightenfactor0

\f1\b \cf0 \strokec2 29. How do you version control your test automation framework?\
\pard\pardeftab720\sa240\partightenfactor0
\cf0 \strokec2 Answer:
\f0\b0 \strokec2 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls25\ilvl0\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Use 
\f1\b Git
\f0\b0  for version control.\
\ls25\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Branching strategy: 
\f1\b GitFlow
\f0\b0  or simple 
\f1\b feature/bugfix branches
\f0\b0 .\
\ls25\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Protect 
\f2\fs26 main/master
\f0\fs24 , require PRs and code reviews.\
\ls25\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Maintain 
\f1\b CHANGELOG.md
\f0\b0 , tag releases for traceability.\
\pard\pardeftab720\partightenfactor0
\cf3 \strokec3 \
\pard\pardeftab720\sa319\partightenfactor0

\f1\b \cf0 \strokec2 30. How do you manage configuration and environment-specific data?\
\pard\pardeftab720\sa240\partightenfactor0
\cf0 \strokec2 Answer:
\f0\b0 \strokec2 \uc0\u8232 Use:\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls26\ilvl0
\f1\b \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 config.properties
\f0\b0  files for environment URLs, device info\
\ls26\ilvl0
\f1\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 JSON or YAML
\f0\b0  for structured test data\
\ls26\ilvl0
\f1\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Java enums or constants
\f0\b0  to centralize frequently used values\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls26\ilvl0\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Use environment variables in CI to control which test suite or device is used\
\pard\pardeftab720\partightenfactor0
\cf3 \strokec3 \
\pard\pardeftab720\sa280\partightenfactor0

\f3\fs28 \cf0 \strokec2 \uc0\u55357 \u56481 
\f1\b  Code-Based / Live Coding-Style Questions\
\pard\pardeftab720\partightenfactor0

\f0\b0\fs24 \cf3 \strokec3 \
\pard\pardeftab720\sa319\partightenfactor0

\f1\b \cf0 \strokec2 31. Write a Java method to swipe until a specific element is found.\
\pard\pardeftab720\partightenfactor0

\f2\b0\fs26 \cf0 \strokec2 java\
\pard\pardeftab720\partightenfactor0

\f4\fs22 \cf4 \cb5 \strokec4 CopyEdit
\f2\fs26 \cf0 \cb1 \strokec2 \
public void swipeUntilElementVisible(By locator) \{\
    int maxSwipes = 5;\
    for (int i = 0; i < maxSwipes; i++) \{\
        try \{\
            if (driver.findElement(locator).isDisplayed()) return;\
        \} catch (NoSuchElementException e) \{\
            swipeUp();\
        \}\
    \}\
    throw new NoSuchElementException("Element not found after swiping.");\
\}\
\
public void swipeUp() \{\
    Dimension size = driver.manage().window().getSize();\
    int startY = (int) (size.height * 0.8);\
    int endY = (int) (size.height * 0.2);\
    int x = size.width / 2;\
\
    new TouchAction(driver)\
        .press(PointOption.point(x, startY))\
        .waitAction(WaitOptions.waitOptions(Duration.ofMillis(500)))\
        .moveTo(PointOption.point(x, endY))\
        .release()\
        .perform();\
\}\
\pard\pardeftab720\partightenfactor0

\f0\fs24 \cf3 \strokec3 \
\pard\pardeftab720\sa319\partightenfactor0

\f1\b \cf0 \strokec2 32. How would you handle login in multiple tests without repeating steps?\
\pard\pardeftab720\sa240\partightenfactor0
\cf0 \strokec2 Answer:
\f0\b0 \strokec2 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls27\ilvl0
\f1\b \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Approach 1
\f0\b0 : Create a 
\f2\fs26 LoginPage
\f0\fs24 \
\pard\pardeftab720\sa240\partightenfactor0
\cf0 \strokec2 A network error occurred. Please check your connection and try again. If this issue persists please contact us through our help center at {\field{\*\fldinst{HYPERLINK "https://help.openai.com/"}}{\fldrslt \cf6 \ul \ulc6 \strokec6 help.openai.com}}.\
\pard\pardeftab720\qc\partightenfactor0

\f4\fs22 \cf4 \strokec4 \
\pard\pardeftab720\sa332\partightenfactor0

\f1\b\fs20 \cf0 \strokec2 You said:\
\pard\pardeftab720\partightenfactor0

\f0\b0\fs24 \cf0 \strokec2 more scenario based questions\
\
\pard\pardeftab720\sa419\partightenfactor0

\f1\b\fs18 \cf0 \strokec2 ChatGPT said:\
\pard\pardeftab720\sa240\partightenfactor0

\f0\b0\fs24 \cf0 \strokec2 Here are 
\f1\b \strokec2 more scenario-based SDET interview questions
\f0\b0 \strokec2  designed for a 
\f1\b \strokec2 mid-to-senior automation engineer
\f0\b0 \strokec2  with experience in 
\f1\b \strokec2 Java and Appium
\f0\b0 \strokec2 . These scenarios test 
\f1\b \strokec2 problem-solving, design decisions, debugging, and prioritization
\f0\b0 \strokec2 \'97areas commonly explored in interviews for 5+ years of experience.\
\pard\pardeftab720\partightenfactor0
\cf3 \strokec3 \
\pard\pardeftab720\sa280\partightenfactor0

\f3\fs28 \cf0 \strokec2 \uc0\u55358 \u56809 
\f1\b  Scenario-Based SDET Interview Questions (with Sample Approaches)\
\pard\pardeftab720\partightenfactor0

\f0\b0\fs24 \cf3 \strokec3 \
\pard\pardeftab720\sa319\partightenfactor0

\f1\b \cf0 \strokec2 33. A login test that was previously passing is now failing only on Android 14 devices. What steps do you take to debug it?\
\pard\pardeftab720\sa240\partightenfactor0
\cf0 \strokec2 Approach:
\f0\b0 \strokec2 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls28\ilvl0
\f1\b \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	1	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Reproduce the issue
\f0\b0  on Android 14 manually.\
\ls28\ilvl0
\f1\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	2	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Check app compatibility
\f0\b0 : Ensure your app version supports Android 14 (check release notes).\
\ls28\ilvl0
\f1\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	3	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Review Appium logs
\f0\b0  for exceptions or element location issues.\
\ls28\ilvl0
\f1\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	4	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Compare locators/UI changes
\f0\b0 : Use Appium Inspector or UIAutomatorViewer on Android 14.\
\ls28\ilvl0
\f1\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	5	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 ADB logcat
\f0\b0 : Check for OS-level permission or crash issues.\
\ls28\ilvl0
\f1\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	6	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Update Appium client and drivers
\f0\b0  to support Android 14 if needed.\
\pard\pardeftab720\partightenfactor0
\cf3 \strokec3 \
\pard\pardeftab720\sa319\partightenfactor0

\f1\b \cf0 \strokec2 34. Your test case sometimes fails because the app takes longer to load certain pages. How do you handle such flakiness?\
\pard\pardeftab720\sa240\partightenfactor0
\cf0 \strokec2 Approach:
\f0\b0 \strokec2 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls29\ilvl0\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Replace 
\f1\b hard waits
\f0\b0  with 
\f1\b explicit waits
\f0\b0  using 
\f2\fs26 WebDriverWait
\f0\fs24 .\
\ls29\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Implement 
\f1\b custom wait conditions
\f0\b0  based on page load (e.g., presence of key element).\
\ls29\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Add 
\f1\b logging and screenshots
\f0\b0  to help analyze when/why delays occur.\
\ls29\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Optionally use 
\f1\b FluentWait
\f0\b0  for polling and timeout flexibility.\
\pard\pardeftab720\partightenfactor0
\cf3 \strokec3 \
\pard\pardeftab720\sa319\partightenfactor0

\f1\b \cf0 \strokec2 35. Your Appium suite is taking over 2 hours to execute. How would you optimize execution time?\
\pard\pardeftab720\sa240\partightenfactor0
\cf0 \strokec2 Approach:
\f0\b0 \strokec2 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls30\ilvl0\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Enable 
\f1\b parallel execution
\f0\b0  using TestNG or JUnit across devices/emulators.\
\ls30\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Split tests into 
\f1\b suites (smoke, regression)
\f0\b0  and run them selectively.\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls30\ilvl0
\f1\b \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Optimize locators and waits
\f0\b0  to reduce runtime.\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls30\ilvl0\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Run tests on a 
\f1\b device farm
\f0\b0  (BrowserStack, Sauce Labs) for better scale.\
\ls30\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Cache common login/data setup where possible (e.g., using APIs to bypass UI login).\
\pard\pardeftab720\partightenfactor0
\cf3 \strokec3 \
\pard\pardeftab720\sa319\partightenfactor0

\f1\b \cf0 \strokec2 36. A test is failing intermittently with 
\f6\fs26 \strokec2 NoSuchElementException
\f1\fs24 \strokec2  even though the element exists. What could be the causes and solutions?\
\pard\pardeftab720\sa240\partightenfactor0
\cf0 \strokec2 Possible Causes:
\f0\b0 \strokec2 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls31\ilvl0\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Element not visible yet (timing issue)\
\ls31\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Animation/transitions not complete\
\ls31\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Wrong context (e.g., WebView vs Native)\
\ls31\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Incorrect locator strategy\
\pard\pardeftab720\sa240\partightenfactor0

\f1\b \cf0 Solution:
\f0\b0 \strokec2 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls32\ilvl0\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Use 
\f2\fs26 WebDriverWait
\f0\fs24  for visibility.\
\ls32\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Validate if app animations are interfering.\
\ls32\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Recheck if element exists in the current 
\f1\b context
\f0\b0 .\
\ls32\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Use 
\f1\b UIAutomator
\f0\b0  strategies like 
\f2\fs26 new UiSelector().textContains()
\f0\fs24  for more reliable locators.\
\pard\pardeftab720\partightenfactor0
\cf3 \strokec3 \
\pard\pardeftab720\sa319\partightenfactor0

\f1\b \cf0 \strokec2 37. Your app has a captcha on the login screen. How do you automate login in your tests?\
\pard\pardeftab720\sa240\partightenfactor0
\cf0 \strokec2 Approach:
\f0\b0 \strokec2 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls33\ilvl0
\f1\b \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Bypass captcha
\f0\b0 : Use test build with captcha disabled (recommended by dev team).\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls33\ilvl0\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Or use 
\f1\b token-based authentication
\f0\b0  to bypass UI login altogether.\
\ls33\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 If unavoidable, use 
\f1\b manual intervention
\f0\b0  (e.g., OTP or captcha API if exposed).\
\pard\pardeftab720\partightenfactor0
\cf3 \strokec3 \
\pard\pardeftab720\sa319\partightenfactor0

\f1\b \cf0 \strokec2 38. You\'92re asked to test an app with both native and embedded web views. How do you handle this in Appium?\
\pard\pardeftab720\sa240\partightenfactor0
\cf0 \strokec2 Approach:
\f0\b0 \strokec2 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls34\ilvl0\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Use 
\f2\fs26 driver.getContextHandles()
\f0\fs24  to fetch available contexts.\
\ls34\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Switch to 
\f2\fs26 WEBVIEW
\f0\fs24  using 
\f2\fs26 driver.context("WEBVIEW_xyz")
\f0\fs24 .\
\ls34\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Interact with web elements using standard Selenium locators.\
\ls34\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Switch back to native context as needed: 
\f2\fs26 driver.context("NATIVE_APP")
\f0\fs24 .\
\pard\pardeftab720\partightenfactor0
\cf3 \strokec3 \
\pard\pardeftab720\sa319\partightenfactor0

\f1\b \cf0 \strokec2 39. You need to run tests against different locales (languages) of the app. How would you design the framework?\
\pard\pardeftab720\sa240\partightenfactor0
\cf0 \strokec2 Approach:
\f0\b0 \strokec2 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls35\ilvl0\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Externalize 
\f1\b expected text/labels
\f0\b0  into resource files (
\f2\fs26 en.json
\f0\fs24 , 
\f2\fs26 fr.json
\f0\fs24 , etc.).\
\ls35\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Use 
\f1\b capabilities
\f0\b0  like 
\f2\fs26 locale
\f0\fs24  and 
\f2\fs26 language
\f0\fs24  to start app in required locale.\
\ls35\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Dynamically load locale data based on test suite or test parameter.\
\ls35\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Validate UI using localized expected data.\
\pard\pardeftab720\partightenfactor0
\cf3 \strokec3 \
\pard\pardeftab720\sa319\partightenfactor0

\f1\b \cf0 \strokec2 40. The login page occasionally throws a crash error dialog. How do you detect and handle this in your tests?\
\pard\pardeftab720\sa240\partightenfactor0
\cf0 \strokec2 Approach:
\f0\b0 \strokec2 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls36\ilvl0\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Use Appium to detect the presence of crash dialogs by ID or text (
\f2\fs26 "App has stopped"
\f0\fs24 ).\
\ls36\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Implement a utility method to 
\f1\b dismiss
\f0\b0  unexpected dialogs.\
\ls36\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Use ADB logcat to detect crashes and dump logs.\
\ls36\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Fail test with a meaningful message if crash is detected.\
\pard\pardeftab720\partightenfactor0
\cf3 \strokec3 \
\pard\pardeftab720\sa319\partightenfactor0

\f1\b \cf0 \strokec2 41. Your team is shifting from Android native to Flutter. How would you adapt your existing automation strategy?\
\pard\pardeftab720\sa240\partightenfactor0
\cf0 \strokec2 Approach:
\f0\b0 \strokec2 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls37\ilvl0\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Evaluate 
\f1\b Appium Flutter Driver
\f0\b0  or tools like 
\f1\b Flutter Driver
\f0\b0  or 
\f1\b Detox
\f0\b0 .\
\ls37\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Redesign the locator strategy: Flutter elements often don\'92t expose IDs, so use 
\f2\fs26 accessibilityId
\f0\fs24  or 
\f2\fs26 semantic labels
\f0\fs24 .\
\ls37\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Refactor Page Object classes to support the new element structure.\
\ls37\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Coordinate with developers to expose 
\f1\b automation-friendly hooks
\f0\b0 .\
\pard\pardeftab720\partightenfactor0
\cf3 \strokec3 \
\pard\pardeftab720\sa319\partightenfactor0

\f1\b \cf0 \strokec2 42. You need to validate network API responses during mobile test execution. How would you do it?\
\pard\pardeftab720\sa240\partightenfactor0
\cf0 \strokec2 Approach:
\f0\b0 \strokec2 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls38\ilvl0\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Use tools like 
\f1\b Charles Proxy
\f0\b0  or 
\f1\b BrowserMob Proxy
\f0\b0  to capture and assert HTTP traffic.\
\ls38\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Or combine Appium tests with 
\f1\b REST Assured
\f0\b0  or 
\f1\b OkHttp
\f0\b0  to validate backend APIs directly.\
\ls38\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Validate that front-end reflects correct API response (UI + backend sync).\
\pard\pardeftab720\partightenfactor0
\cf3 \strokec3 \
\pard\pardeftab720\sa319\partightenfactor0

\f1\b \cf0 \strokec2 43. During regression testing, a UI element ID has changed, breaking several tests. How do you prevent this in the future?\
\pard\pardeftab720\sa240\partightenfactor0
\cf0 \strokec2 Approach:
\f0\b0 \strokec2 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls39\ilvl0\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Collaborate with devs to introduce 
\f1\b stable test IDs
\f0\b0  (e.g., 
\f2\fs26 test-tag
\f0\fs24  or 
\f2\fs26 content-desc
\f0\fs24 ).\
\ls39\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Use 
\f1\b resilient locators
\f0\b0  (like accessibilityId or stable XPath).\
\ls39\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Run a 
\f1\b nightly smoke test
\f0\b0  to catch breaking changes early.\
\ls39\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Add automated validation in the CI to ensure test ID consistency (linting tools or custom script).\
\pard\pardeftab720\partightenfactor0
\cf3 \strokec3 \
\pard\pardeftab720\sa319\partightenfactor0

\f1\b \cf0 \strokec2 44. You\'92re asked to automate a mobile app that uses biometric authentication. How do you approach this?\
\pard\pardeftab720\sa240\partightenfactor0
\cf0 \strokec2 Approach:
\f0\b0 \strokec2 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls40\ilvl0\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Use 
\f1\b Appium\'92s device simulation features
\f0\b0  (e.g., 
\f2\fs26 adb emu finger touch
\f0\fs24 ) to simulate fingerprint.\
\ls40\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 For iOS simulators, use 
\f2\fs26 xcrun simctl biometric enroll
\f0\fs24  and 
\f2\fs26 simctl biometric touch
\f0\fs24 .\
\ls40\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Ensure the app is launched in test mode with biometric prompts enabled.\
\ls40\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Bypass biometrics in test builds if possible.\
\pard\pardeftab720\partightenfactor0
\cf3 \strokec3 \
\pard\pardeftab720\sa319\partightenfactor0

\f1\b \cf0 \strokec2 45. You\'92re asked to add test coverage for dark mode UI. How do you do it?\
\pard\pardeftab720\sa240\partightenfactor0
\cf0 \strokec2 Approach:
\f0\b0 \strokec2 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls41\ilvl0\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Use 
\f1\b ADB or iOS simulator commands
\f0\b0  to toggle dark mode.\
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\sa240\partightenfactor0
\ls41\ilvl1\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f5 \uc0\u9702 
\f0 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Android: 
\f2\fs26 adb shell settings put secure ui_night_mode 2
\f0\fs24 \
\ls41\ilvl1\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f5 \uc0\u9702 
\f0 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 iOS: 
\f2\fs26 xcrun simctl ui <device-udid> appearance dark
\f0\fs24 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls41\ilvl0\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Validate color properties using visual tools or attribute assertions.\
\ls41\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Ensure test suite can toggle and validate both light and dark themes.\
\pard\pardeftab720\partightenfactor0
\cf3 \strokec3 \
\pard\pardeftab720\sa240\partightenfactor0
\cf0 \strokec2 Would you like:\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls42\ilvl0\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Scenario-based 
\f1\b coding tasks
\f0\b0  next?\
\ls42\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 More questions related to 
\f1\b CI/CD
\f0\b0 , 
\f1\b Docker
\f0\b0 , or 
\f1\b API automation
\f0\b0 ?\
\ls42\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 A 
\f1\b mock interview
\f0\b0  session based on these scenarios?\
\pard\pardeftab720\sa240\partightenfactor0
\cf0 \strokec2 Let me know how you'd like to go deeper!\
\pard\pardeftab720\qc\partightenfactor0

\f4\fs22 \cf4 \strokec4 \
\pard\pardeftab720\sa332\partightenfactor0

\f1\b\fs20 \cf0 \strokec2 You said:\
\pard\pardeftab720\partightenfactor0

\f0\b0\fs24 \cf0 \strokec2 more questions around Java, a bit advanced\
\
\pard\pardeftab720\sa419\partightenfactor0

\f1\b\fs18 \cf0 \strokec2 ChatGPT said:\
\pard\pardeftab720\sa240\partightenfactor0

\f0\b0\fs24 \cf0 \strokec2 Great! Below are 
\f1\b \strokec2 advanced Java interview questions
\f0\b0 \strokec2  specifically curated for a 
\f1\b \strokec2 Senior SDET
\f0\b0 \strokec2  with 
\f1\b \strokec2 5.7 years of experience
\f0\b0 \strokec2 , especially one working with 
\f1\b \strokec2 automation frameworks
\f0\b0 \strokec2  using Java. These focus on 
\f1\b \strokec2 core language features
\f0\b0 \strokec2 , 
\f1\b \strokec2 best practices
\f0\b0 \strokec2 , 
\f1\b \strokec2 design principles
\f0\b0 \strokec2 , and 
\f1\b \strokec2 real-world testing applications
\f0\b0 \strokec2 .\
\pard\pardeftab720\partightenfactor0
\cf3 \strokec3 \
\pard\pardeftab720\sa280\partightenfactor0

\f3\fs28 \cf0 \strokec2 \uc0\u9749 
\f1\b  Advanced Java Interview Questions for SDET\
\pard\pardeftab720\partightenfactor0

\f0\b0\fs24 \cf3 \strokec3 \
\pard\pardeftab720\sa319\partightenfactor0

\f1\b \cf0 \strokec2 46. What are functional interfaces in Java? How are they useful in test automation?\
\pard\pardeftab720\sa240\partightenfactor0
\cf0 \strokec2 Answer:
\f0\b0 \strokec2 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls43\ilvl0\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 A 
\f1\b functional interface
\f0\b0  has exactly one abstract method. It's used primarily with 
\f1\b lambda expressions
\f0\b0  and 
\f1\b method references
\f0\b0 .\
\ls43\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Example:\uc0\u8232 
\f2\fs26 java\uc0\u8232 
\f4\fs22 \cf4 \cb5 \strokec4 CopyEdit
\f2\fs26 \cf0 \cb1 \strokec2 \uc0\u8232 \u8232 \u8232 @FunctionalInterface\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls43\ilvl0\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 interface RetryHandler \{\
\ls43\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2     boolean shouldRetry(Exception e);\
\ls43\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \}\
\ls43\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \uc0\u8232 \u8232 
\f0\fs24 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls43\ilvl0\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 In test automation, useful for:\
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\sa240\partightenfactor0
\ls43\ilvl1\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f5 \uc0\u9702 
\f0 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Custom retry logic\
\ls43\ilvl1\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f5 \uc0\u9702 
\f0 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Callback mechanisms\
\ls43\ilvl1\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f5 \uc0\u9702 
\f0 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Wrapping assertions or actions with retry/wait strategies\
\pard\pardeftab720\partightenfactor0
\cf3 \strokec3 \
\pard\pardeftab720\sa319\partightenfactor0

\f1\b \cf0 \strokec2 47. What is the difference between 
\f6\fs26 \strokec2 final
\f1\fs24 \strokec2 , 
\f6\fs26 \strokec2 finally
\f1\fs24 \strokec2 , and 
\f6\fs26 \strokec2 finalize()
\f1\fs24 \strokec2 ?\
\pard\pardeftab720\sa240\partightenfactor0
\cf0 \strokec2 Answer:
\f0\b0 \strokec2 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls44\ilvl0
\f2\fs26 \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 final
\f0\fs24 : Prevents further modification. Can be applied to 
\f1\b variables
\f0\b0 , 
\f1\b methods
\f0\b0 , and 
\f1\b classes
\f0\b0 .\
\ls44\ilvl0
\f2\fs26 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 finally
\f0\fs24 : A 
\f1\b block
\f0\b0  in try-catch-finally that always executes, used for cleanup.\
\ls44\ilvl0
\f2\fs26 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 finalize()
\f0\fs24 : Method in 
\f2\fs26 Object
\f0\fs24  class called by GC 
\f1\b before object destruction
\f0\b0  (deprecated in Java 9+).\
\pard\pardeftab720\sa240\partightenfactor0
\cf0 \strokec2 Use 
\f2\fs26 \strokec2 finally
\f0\fs24 \strokec2  in automation to close connections or quit drivers even if tests fail.\
\pard\pardeftab720\partightenfactor0
\cf3 \strokec3 \
\pard\pardeftab720\sa319\partightenfactor0

\f1\b \cf0 \strokec2 48. Explain the difference between 
\f6\fs26 \strokec2 HashMap
\f1\fs24 \strokec2 , 
\f6\fs26 \strokec2 LinkedHashMap
\f1\fs24 \strokec2 , and 
\f6\fs26 \strokec2 TreeMap
\f1\fs24 \strokec2 . Which one would you use in your test framework and why?\

\itap1\trowd \taflags0 \trgaph108\trleft-108 \trbrdrt\brdrnil \trbrdrl\brdrnil \trbrdrr\brdrnil 
\clvertalc \clshdrawnil \clwWidth1380\clftsWidth3 \clmart10 \clmarl10 \clmarb10 \clmarr10 \clbrdrt\brdrnil \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt20 \clpadl20 \clpadb20 \clpadr20 \gaph\cellx2160
\clvertalc \clshdrawnil \clwWidth1013\clftsWidth3 \clmart10 \clmarl10 \clmarb10 \clmarr10 \clbrdrt\brdrnil \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt20 \clpadl20 \clpadb20 \clpadr20 \gaph\cellx4320
\clvertalc \clshdrawnil \clwWidth1747\clftsWidth3 \clmart10 \clmarl10 \clmarb10 \clmarr10 \clbrdrt\brdrnil \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt20 \clpadl20 \clpadb20 \clpadr20 \gaph\cellx6480
\clvertalc \clshdrawnil \clwWidth1719\clftsWidth3 \clmart10 \clmarl10 \clmarb10 \clmarr10 \clbrdrt\brdrnil \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt20 \clpadl20 \clpadb20 \clpadr20 \gaph\cellx8640
\pard\intbl\itap1\pardeftab720\qc\partightenfactor0
\cf0 \strokec2 Feature\cell 
\pard\intbl\itap1\pardeftab720\qc\partightenfactor0
\cf0 HashMap\cell 
\pard\intbl\itap1\pardeftab720\qc\partightenfactor0
\cf0 LinkedHashMap\cell 
\pard\intbl\itap1\pardeftab720\qc\partightenfactor0
\cf0 TreeMap\cell \row

\itap1\trowd \taflags0 \trgaph108\trleft-108 \trbrdrl\brdrnil \trbrdrr\brdrnil 
\clvertalc \clshdrawnil \clwWidth1380\clftsWidth3 \clmart10 \clmarl10 \clmarb10 \clmarr10 \clbrdrt\brdrnil \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt20 \clpadl20 \clpadb20 \clpadr20 \gaph\cellx2160
\clvertalc \clshdrawnil \clwWidth1013\clftsWidth3 \clmart10 \clmarl10 \clmarb10 \clmarr10 \clbrdrt\brdrnil \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt20 \clpadl20 \clpadb20 \clpadr20 \gaph\cellx4320
\clvertalc \clshdrawnil \clwWidth1747\clftsWidth3 \clmart10 \clmarl10 \clmarb10 \clmarr10 \clbrdrt\brdrnil \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt20 \clpadl20 \clpadb20 \clpadr20 \gaph\cellx6480
\clvertalc \clshdrawnil \clwWidth1719\clftsWidth3 \clmart10 \clmarl10 \clmarb10 \clmarr10 \clbrdrt\brdrnil \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt20 \clpadl20 \clpadb20 \clpadr20 \gaph\cellx8640
\pard\intbl\itap1\pardeftab720\partightenfactor0

\f0\b0 \cf0 Order\cell 
\pard\intbl\itap1\pardeftab720\partightenfactor0
\cf0 No order\cell 
\pard\intbl\itap1\pardeftab720\partightenfactor0
\cf0 Insertion order\cell 
\pard\intbl\itap1\pardeftab720\partightenfactor0
\cf0 Sorted by keys\cell \row

\itap1\trowd \taflags0 \trgaph108\trleft-108 \trbrdrl\brdrnil \trbrdrr\brdrnil 
\clvertalc \clshdrawnil \clwWidth1380\clftsWidth3 \clmart10 \clmarl10 \clmarb10 \clmarr10 \clbrdrt\brdrnil \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt20 \clpadl20 \clpadb20 \clpadr20 \gaph\cellx2160
\clvertalc \clshdrawnil \clwWidth1013\clftsWidth3 \clmart10 \clmarl10 \clmarb10 \clmarr10 \clbrdrt\brdrnil \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt20 \clpadl20 \clpadb20 \clpadr20 \gaph\cellx4320
\clvertalc \clshdrawnil \clwWidth1747\clftsWidth3 \clmart10 \clmarl10 \clmarb10 \clmarr10 \clbrdrt\brdrnil \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt20 \clpadl20 \clpadb20 \clpadr20 \gaph\cellx6480
\clvertalc \clshdrawnil \clwWidth1719\clftsWidth3 \clmart10 \clmarl10 \clmarb10 \clmarr10 \clbrdrt\brdrnil \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt20 \clpadl20 \clpadb20 \clpadr20 \gaph\cellx8640
\pard\intbl\itap1\pardeftab720\partightenfactor0
\cf0 Null keys/vals\cell 
\pard\intbl\itap1\pardeftab720\partightenfactor0
\cf0 1 null key\cell 
\pard\intbl\itap1\pardeftab720\partightenfactor0
\cf0 1 null key\cell 
\pard\intbl\itap1\pardeftab720\partightenfactor0
\cf0 No null keys\cell \row

\itap1\trowd \taflags0 \trgaph108\trleft-108 \trbrdrl\brdrnil \trbrdrt\brdrnil \trbrdrr\brdrnil 
\clvertalc \clshdrawnil \clwWidth1380\clftsWidth3 \clmart10 \clmarl10 \clmarb10 \clmarr10 \clbrdrt\brdrnil \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt20 \clpadl20 \clpadb20 \clpadr20 \gaph\cellx2160
\clvertalc \clshdrawnil \clwWidth1013\clftsWidth3 \clmart10 \clmarl10 \clmarb10 \clmarr10 \clbrdrt\brdrnil \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt20 \clpadl20 \clpadb20 \clpadr20 \gaph\cellx4320
\clvertalc \clshdrawnil \clwWidth1747\clftsWidth3 \clmart10 \clmarl10 \clmarb10 \clmarr10 \clbrdrt\brdrnil \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt20 \clpadl20 \clpadb20 \clpadr20 \gaph\cellx6480
\clvertalc \clshdrawnil \clwWidth1719\clftsWidth3 \clmart10 \clmarl10 \clmarb10 \clmarr10 \clbrdrt\brdrnil \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt20 \clpadl20 \clpadb20 \clpadr20 \gaph\cellx8640
\pard\intbl\itap1\pardeftab720\partightenfactor0
\cf0 Performance\cell 
\pard\intbl\itap1\pardeftab720\partightenfactor0
\cf0 Fastest\cell 
\pard\intbl\itap1\pardeftab720\partightenfactor0
\cf0 Slightly slower\cell 
\pard\intbl\itap1\pardeftab720\partightenfactor0
\cf0 Slower (O(log n))\cell \lastrow\row
\pard\pardeftab720\partightenfactor0
\cf0 \strokec2 \
\pard\pardeftab720\sa240\partightenfactor0

\f1\b \cf0 \strokec2 Usage in test automation:
\f0\b0 \strokec2 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls45\ilvl0
\f2\fs26 \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 HashMap
\f0\fs24 : Fast lookups for configurations\
\ls45\ilvl0
\f2\fs26 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 LinkedHashMap
\f0\fs24 : Maintain insertion order for step-wise data (e.g., steps in test)\
\ls45\ilvl0
\f2\fs26 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 TreeMap
\f0\fs24 : When keys need sorting (e.g., version comparisons)\
\pard\pardeftab720\partightenfactor0
\cf3 \strokec3 \
\pard\pardeftab720\sa319\partightenfactor0

\f1\b \cf0 \strokec2 49. How would you use 
\f6\fs26 \strokec2 enum
\f1\fs24 \strokec2  in an automation project?\
\pard\pardeftab720\sa240\partightenfactor0
\cf0 \strokec2 Answer:
\f0\b0 \strokec2 \uc0\u8232 Use enums for:\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls46\ilvl0\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Centralizing constants:\uc0\u8232 
\f2\fs26 java\uc0\u8232 
\f4\fs22 \cf4 \cb5 \strokec4 CopyEdit
\f2\fs26 \cf0 \cb1 \strokec2 \uc0\u8232 \u8232 \u8232 public enum PlatformType \{\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls46\ilvl0\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2     ANDROID, IOS, WEB;\
\ls46\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \}\
\ls46\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \uc0\u8232 \u8232 
\f0\fs24 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls46\ilvl0\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Mapping test data:\uc0\u8232 
\f2\fs26 java\uc0\u8232 
\f4\fs22 \cf4 \cb5 \strokec4 CopyEdit
\f2\fs26 \cf0 \cb1 \strokec2 \uc0\u8232 \u8232 \u8232 public enum Environment \{\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls46\ilvl0\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2     QA("https://qa.example.com"),\
\ls46\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2     STAGING("https://staging.example.com");\
\ls46\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \
\ls46\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2     private final String url;\
\ls46\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2     Environment(String url) \{ this.url = url; \}\
\ls46\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2     public String getUrl() \{ return url; \}\
\ls46\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \}\
\ls46\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \uc0\u8232 \u8232 
\f0\fs24 \
\pard\pardeftab720\partightenfactor0
\cf3 \strokec3 \
\pard\pardeftab720\sa319\partightenfactor0

\f1\b \cf0 \strokec2 50. What is the difference between 
\f6\fs26 \strokec2 Comparable
\f1\fs24 \strokec2  and 
\f6\fs26 \strokec2 Comparator
\f1\fs24 \strokec2 ?\
\pard\pardeftab720\sa240\partightenfactor0
\cf0 \strokec2 Answer:
\f0\b0 \strokec2 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls47\ilvl0
\f2\fs26 \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Comparable
\f0\fs24 : Natural ordering (implemented by the object itself).\
\ls47\ilvl0
\f2\fs26 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Comparator
\f0\fs24 : Custom ordering (external strategy).\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls47\ilvl0\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Example in tests: Sorting test cases by priority:\uc0\u8232 
\f2\fs26 java\uc0\u8232 
\f4\fs22 \cf4 \cb5 \strokec4 CopyEdit
\f2\fs26 \cf0 \cb1 \strokec2 \uc0\u8232 \u8232 \u8232 Collections.sort(testList, Comparator.comparing(TestCase::getPriority));\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls47\ilvl0\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \uc0\u8232 \u8232 
\f0\fs24 \
\pard\pardeftab720\partightenfactor0
\cf3 \strokec3 \
\pard\pardeftab720\sa319\partightenfactor0

\f1\b \cf0 \strokec2 51. How does Java\'92s exception hierarchy work? What\'92s your strategy for exception handling in test code?\
\pard\pardeftab720\sa240\partightenfactor0
\cf0 \strokec2 Answer:
\f0\b0 \strokec2 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls48\ilvl0\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Two types: 
\f1\b Checked
\f0\b0  (e.g., 
\f2\fs26 IOException
\f0\fs24 ) and 
\f1\b Unchecked
\f0\b0  (e.g., 
\f2\fs26 NullPointerException
\f0\fs24 ).\
\ls48\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 In test automation:\
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\sa240\partightenfactor0
\ls48\ilvl1\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f5 \uc0\u9702 
\f0 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Use 
\f1\b custom exceptions
\f0\b0  (e.g., 
\f2\fs26 TestDataMissingException
\f0\fs24 , 
\f2\fs26 ElementNotFoundException
\f0\fs24 )\
\ls48\ilvl1\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f5 \uc0\u9702 
\f0 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Avoid suppressing exceptions silently.\
\ls48\ilvl1\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f5 \uc0\u9702 
\f0 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Wrap reusable methods with try-catch and throw meaningful errors.\
\pard\pardeftab720\partightenfactor0
\cf3 \strokec3 \
\pard\pardeftab720\sa319\partightenfactor0

\f1\b \cf0 \strokec2 52. What\'92s the difference between 
\f6\fs26 \strokec2 synchronized
\f1\fs24 \strokec2  block and method? When would you use them?\
\pard\pardeftab720\sa240\partightenfactor0
\cf0 \strokec2 Answer:
\f0\b0 \strokec2 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls49\ilvl0
\f1\b \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Synchronized method
\f0\b0 : Locks the entire method.\
\ls49\ilvl0
\f1\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Synchronized block
\f0\b0 : Locks only a part of the code on a specified object.\
\pard\pardeftab720\sa240\partightenfactor0

\f1\b \cf0 In test automation
\f0\b0 \strokec2 :\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls50\ilvl0\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Useful in 
\f1\b parallel execution
\f0\b0  to avoid race conditions when:\
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\sa240\partightenfactor0
\ls50\ilvl1\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f5 \uc0\u9702 
\f0 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Writing to shared log files\
\ls50\ilvl1\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f5 \uc0\u9702 
\f0 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Managing thread-safe WebDriver instances\
\pard\pardeftab720\partightenfactor0
\cf3 \strokec3 \
\pard\pardeftab720\sa319\partightenfactor0

\f1\b \cf0 \strokec2 53. What is the Java memory model? How does it relate to thread safety in automation frameworks?\
\pard\pardeftab720\sa240\partightenfactor0
\cf0 \strokec2 Answer:
\f0\b0 \strokec2 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls51\ilvl0\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Java Memory Model (JMM) defines how threads interact through memory (heap, stack).\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls51\ilvl0
\f1\b \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Volatile
\f0\b0  variables and 
\f1\b synchronized blocks
\f0\b0  are used to ensure visibility and atomicity.\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls51\ilvl0\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 In frameworks, apply JMM principles to:\
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\sa240\partightenfactor0
\ls51\ilvl1\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f5 \uc0\u9702 
\f0 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Manage 
\f1\b singleton driver instances
\f0\b0  correctly\
\ls51\ilvl1\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f5 \uc0\u9702 
\f0 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Avoid data leaks or corruption in 
\f1\b parallel execution
\f0\b0 \
\pard\pardeftab720\partightenfactor0
\cf3 \strokec3 \
\pard\pardeftab720\sa319\partightenfactor0

\f1\b \cf0 \strokec2 54. How would you use Java Reflection in test automation?\
\pard\pardeftab720\sa240\partightenfactor0
\cf0 \strokec2 Answer:
\f0\b0 \strokec2 \uc0\u8232 Use cases:\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls52\ilvl0
\f1\b \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Dynamic test loading
\f0\b0  from class names\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls52\ilvl0\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Invoking methods dynamically\
\ls52\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Building a 
\f1\b keyword-driven framework
\f0\b0  where keywords map to methods\
\pard\pardeftab720\sa240\partightenfactor0
\cf0 \strokec2 Example:\
\pard\pardeftab720\partightenfactor0

\f2\fs26 \cf0 \strokec2 java\
\pard\pardeftab720\partightenfactor0

\f4\fs22 \cf4 \cb5 \strokec4 CopyEdit
\f2\fs26 \cf0 \cb1 \strokec2 \
Method m = clazz.getMethod("login", String.class, String.class);\
m.invoke(obj, "admin", "pass123");\
\pard\pardeftab720\partightenfactor0

\f0\fs24 \cf3 \strokec3 \
\pard\pardeftab720\sa319\partightenfactor0

\f1\b \cf0 \strokec2 55. What are method references and how do they improve your code readability in test utilities?\
\pard\pardeftab720\sa240\partightenfactor0
\cf0 \strokec2 Answer:
\f0\b0 \strokec2 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls53\ilvl0\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 A 
\f1\b method reference
\f0\b0  is a shorthand for a lambda expression that just calls a method.\
\ls53\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Syntax: 
\f2\fs26 ClassName::methodName
\f0\fs24 \
\ls53\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Improves readability in utility methods:\uc0\u8232 
\f2\fs26 java\uc0\u8232 
\f4\fs22 \cf4 \cb5 \strokec4 CopyEdit
\f2\fs26 \cf0 \cb1 \strokec2 \uc0\u8232 \u8232 \u8232 list.forEach(System.out::println);\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls53\ilvl0\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \uc0\u8232 \u8232 
\f0\fs24 \
\pard\pardeftab720\sa240\partightenfactor0
\cf0 \strokec2 In automation:\
\pard\pardeftab720\partightenfactor0

\f2\fs26 \cf0 \strokec2 java\
\pard\pardeftab720\partightenfactor0

\f4\fs22 \cf4 \cb5 \strokec4 CopyEdit
\f2\fs26 \cf0 \cb1 \strokec2 \
retry(() -> driver.findElement(By.id("btnLogin")).click());\
\pard\pardeftab720\partightenfactor0

\f0\fs24 \cf3 \strokec3 \
\pard\pardeftab720\sa319\partightenfactor0

\f1\b \cf0 \strokec2 56. How do you handle immutability in Java? Why is it important in a test framework?\
\pard\pardeftab720\sa240\partightenfactor0
\cf0 \strokec2 Answer:
\f0\b0 \strokec2 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls54\ilvl0\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Immutability ensures 
\f1\b thread safety
\f0\b0  and predictable behavior.\
\ls54\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 To create an immutable class:\
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\sa240\partightenfactor0
\ls54\ilvl1\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f5 \uc0\u9702 
\f0 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Use 
\f2\fs26 final
\f0\fs24  fields\
\ls54\ilvl1\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f5 \uc0\u9702 
\f0 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 No setters\
\ls54\ilvl1\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f5 \uc0\u9702 
\f0 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Return deep copies of mutable objects\
\pard\pardeftab720\sa240\partightenfactor0
\cf0 \strokec2 Use in test frameworks:\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls55\ilvl0\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Immutable 
\f2\fs26 TestCase
\f0\fs24  objects\
\ls55\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Immutable config models (e.g., 
\f2\fs26 TestConfig
\f0\fs24 )\
\pard\pardeftab720\partightenfactor0
\cf3 \strokec3 \
\pard\pardeftab720\sa319\partightenfactor0

\f1\b \cf0 \strokec2 57. What are some best practices you follow while working with Java Collections in test code?\
\pard\pardeftab720\sa240\partightenfactor0
\cf0 \strokec2 Answer:
\f0\b0 \strokec2 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls56\ilvl0\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Prefer 
\f1\b interfaces
\f0\b0  (
\f2\fs26 List
\f0\fs24 , 
\f2\fs26 Map
\f0\fs24 ) over concrete classes\
\ls56\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Use 
\f1\b generics
\f0\b0  for type safety\
\ls56\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Use 
\f2\fs26 Collections.unmodifiableList()
\f0\fs24  for test data constants\
\ls56\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Use streams or 
\f2\fs26 Collectors.groupingBy
\f0\fs24  for test data organization\
\pard\pardeftab720\partightenfactor0
\cf3 \strokec3 \
\pard\pardeftab720\sa319\partightenfactor0

\f1\b \cf0 \strokec2 58. How do you use Java 8+ features like Streams and Lambdas in your automation code?\
\pard\pardeftab720\sa240\partightenfactor0
\cf0 \strokec2 Answer:
\f0\b0 \strokec2 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls57\ilvl0
\f1\b \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Filter test cases by tag
\f0\b0 :\uc0\u8232 
\f2\fs26 java\uc0\u8232 
\f4\fs22 \cf4 \cb5 \strokec4 CopyEdit
\f2\fs26 \cf0 \cb1 \strokec2 \uc0\u8232 \u8232 \u8232 testCases.stream().filter(tc -> tc.getTag().equals("smoke")).collect(Collectors.toList());\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls57\ilvl0\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \uc0\u8232 \u8232 
\f0\fs24 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls57\ilvl0
\f1\b \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Assert all field values
\f0\b0 :\uc0\u8232 
\f2\fs26 java\uc0\u8232 
\f4\fs22 \cf4 \cb5 \strokec4 CopyEdit
\f2\fs26 \cf0 \cb1 \strokec2 \uc0\u8232 \u8232 \u8232 list.stream().forEach(e -> Assert.assertNotNull(e.getField()));\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls57\ilvl0\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \uc0\u8232 \u8232 
\f0\fs24 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls57\ilvl0\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Used to write 
\f1\b clean, expressive test data filtering and validations
\f0\b0 .\
\pard\pardeftab720\partightenfactor0
\cf3 \strokec3 \
\pard\pardeftab720\sa240\partightenfactor0
\cf0 \strokec2 Would you like:\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls58\ilvl0\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 A 
\f1\b live coding-style Java question
\f0\b0  relevant to automation?\
\ls58\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 A 
\f1\b Java design pattern deep dive
\f0\b0  (e.g., Factory, Singleton, Builder) as used in frameworks?\
\pard\pardeftab720\sa240\partightenfactor0
\cf0 \strokec2 Let me know where you\'92d like to go next \'97 we can also simulate a Java-only interview round.\
\pard\pardeftab720\qc\partightenfactor0

\f4\fs22 \cf4 \strokec4 \
\pard\pardeftab720\sa332\partightenfactor0

\f1\b\fs20 \cf0 \strokec2 You said:\
\pard\pardeftab720\partightenfactor0

\f0\b0\fs24 \cf0 \strokec2 scenario based questions\
\
\pard\pardeftab720\sa419\partightenfactor0

\f1\b\fs18 \cf0 \strokec2 ChatGPT said:\
\pard\pardeftab720\sa240\partightenfactor0

\f0\b0\fs24 \cf0 \strokec2 Here are 
\f1\b \strokec2 scenario-based Java interview questions
\f0\b0 \strokec2  tailored for an 
\f1\b \strokec2 SDET with 5.7 years of experience
\f0\b0 \strokec2 , especially focusing on 
\f1\b \strokec2 automation, framework design, and debugging using Java
\f0\b0 \strokec2 . These go beyond theory \'97 they're designed to evaluate your 
\f1\b \strokec2 real-world problem-solving
\f0\b0 \strokec2  using advanced Java features.\
\pard\pardeftab720\partightenfactor0
\cf3 \strokec3 \
\pard\pardeftab720\sa280\partightenfactor0

\f3\fs28 \cf0 \strokec2 \uc0\u55358 \u56800 
\f1\b  Scenario-Based Java Questions for SDET Interviews\
\pard\pardeftab720\partightenfactor0

\f0\b0\fs24 \cf3 \strokec3 \
\pard\pardeftab720\sa319\partightenfactor0

\f1\b \cf0 \strokec2 1. Scenario: A test keeps failing with 
\f6\fs26 \strokec2 NullPointerException
\f1\fs24 \strokec2 , but logs show the object should have been initialized. How would you debug it?\
\pard\pardeftab720\sa240\partightenfactor0
\cf0 \strokec2 What to discuss:
\f0\b0 \strokec2 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls59\ilvl0\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Confirm if object is initialized 
\f1\b in the same thread
\f0\b0  where it's used.\
\ls59\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Check 
\f1\b constructor calls
\f0\b0  and 
\f1\b order of initialization
\f0\b0 .\
\ls59\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Ensure the variable isn\'92t 
\f1\b overwritten with null
\f0\b0  later.\
\ls59\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Use 
\f2\fs26 Optional
\f0\fs24 , or add null checks and log object's lifecycle.\
\pard\pardeftab720\partightenfactor0
\cf3 \strokec3 \
\pard\pardeftab720\sa319\partightenfactor0

\f1\b \cf0 \strokec2 2. Scenario: You're writing a reusable test data model using Java. How do you ensure it's immutable and thread-safe?\
\pard\pardeftab720\sa240\partightenfactor0
\cf0 \strokec2 Expected design:
\f0\b0 \strokec2 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls60\ilvl0\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Declare class 
\f2\fs26 final
\f0\fs24 \
\ls60\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Make all fields 
\f2\fs26 private final
\f0\fs24 \
\ls60\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Provide only getters, no setters\
\ls60\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 If using collections, return 
\f1\b unmodifiable views
\f0\b0  (e.g., 
\f2\fs26 Collections.unmodifiableList()
\f0\fs24 )\
\pard\pardeftab720\partightenfactor0
\cf3 \strokec3 \
\pard\pardeftab720\sa319\partightenfactor0

\f1\b \cf0 \strokec2 3. Scenario: You want to implement a retry mechanism for flaky UI actions. How would you do it using Java features?\
\pard\pardeftab720\sa240\partightenfactor0
\cf0 \strokec2 Discussion points:
\f0\b0 \strokec2 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls61\ilvl0\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Use 
\f1\b functional interfaces
\f0\b0  + 
\f1\b lambda
\f0\b0  to wrap retries.\
\ls61\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Example:\uc0\u8232 
\f2\fs26 java\uc0\u8232 
\f4\fs22 \cf4 \cb5 \strokec4 CopyEdit
\f2\fs26 \cf0 \cb1 \strokec2 \uc0\u8232 \u8232 \u8232 public static void retryAction(Runnable action, int maxAttempts) \{\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls61\ilvl0\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2     for (int i = 0; i < maxAttempts; i++) \{\
\ls61\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2         try \{\
\ls61\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2             action.run();\
\ls61\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2             break;\
\ls61\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2         \} catch (Exception e) \{\
\ls61\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2             if (i == maxAttempts - 1) throw e;\
\ls61\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2         \}\
\ls61\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2     \}\
\ls61\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \}\
\ls61\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \uc0\u8232 \u8232 
\f0\fs24 \
\pard\pardeftab720\partightenfactor0
\cf3 \strokec3 \
\pard\pardeftab720\sa319\partightenfactor0

\f1\b \cf0 \strokec2 4. Scenario: You need to group test data based on a category field (e.g., regression, smoke). How would you do this in Java?\
\pard\pardeftab720\sa240\partightenfactor0
\cf0 \strokec2 Answer using Java 8+ streams:
\f0\b0 \strokec2 \
\pard\pardeftab720\partightenfactor0

\f2\fs26 \cf0 \strokec2 java\
\pard\pardeftab720\partightenfactor0

\f4\fs22 \cf4 \cb5 \strokec4 CopyEdit
\f2\fs26 \cf0 \cb1 \strokec2 \
Map<String, List<TestCase>> grouped = \
    testCases.stream().collect(Collectors.groupingBy(TestCase::getCategory));\
\pard\pardeftab720\partightenfactor0

\f0\fs24 \cf3 \strokec3 \
\pard\pardeftab720\sa319\partightenfactor0

\f1\b \cf0 \strokec2 5. Scenario: A shared config object is being modified by multiple tests in parallel. Some tests are failing due to inconsistent values. How do you fix it?\
\pard\pardeftab720\sa240\partightenfactor0
\cf0 \strokec2 Solution:
\f0\b0 \strokec2 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls62\ilvl0\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Make the config object 
\f1\b immutable
\f0\b0  or\
\ls62\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Use 
\f1\b ThreadLocal
\f0\b0  to ensure test isolation:\uc0\u8232 
\f2\fs26 java\uc0\u8232 
\f4\fs22 \cf4 \cb5 \strokec4 CopyEdit
\f2\fs26 \cf0 \cb1 \strokec2 \uc0\u8232 \u8232 \u8232 private static ThreadLocal<Config> config = ThreadLocal.withInitial(Config::new);\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls62\ilvl0\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \uc0\u8232 \u8232 
\f0\fs24 \
\pard\pardeftab720\partightenfactor0
\cf3 \strokec3 \
\pard\pardeftab720\sa319\partightenfactor0

\f1\b \cf0 \strokec2 6. Scenario: You have multiple environments (QA, Stage, Prod). How do you manage environment-specific config in your framework using Java?\
\pard\pardeftab720\sa240\partightenfactor0
\cf0 \strokec2 Approach:
\f0\b0 \strokec2 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls63\ilvl0\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Use a 
\f6\b\fs26 ConfigFactory
\f1\fs24  pattern
\f0\b0  that reads config based on env variable.\
\ls63\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Define 
\f2\fs26 interface Config
\f0\fs24  and environment-specific implementations: 
\f2\fs26 QAConfig
\f0\fs24 , 
\f2\fs26 StageConfig
\f0\fs24 , etc.\
\ls63\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Load using:\uc0\u8232 
\f2\fs26 java\uc0\u8232 
\f4\fs22 \cf4 \cb5 \strokec4 CopyEdit
\f2\fs26 \cf0 \cb1 \strokec2 \uc0\u8232 \u8232 \u8232 String env = System.getProperty("env", "qa");\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls63\ilvl0\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Config config = ConfigFactory.getConfig(env);\
\ls63\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \uc0\u8232 \u8232 
\f0\fs24 \
\pard\pardeftab720\partightenfactor0
\cf3 \strokec3 \
\pard\pardeftab720\sa319\partightenfactor0

\f1\b \cf0 \strokec2 7. Scenario: You want to log all actions in your Page Object classes without adding logging in every method. How do you do this in Java?\
\pard\pardeftab720\sa240\partightenfactor0
\cf0 \strokec2 Answer:
\f0\b0 \strokec2 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls64\ilvl0\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Use 
\f1\b Java Reflection
\f0\b0  + AOP concept.\
\ls64\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Wrap method calls with a 
\f1\b proxy
\f0\b0  or use frameworks like 
\f1\b AspectJ
\f0\b0  or 
\f1\b Dynamic Proxy
\f0\b0  for logging.\
\ls64\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Example using dynamic proxy:\uc0\u8232 
\f2\fs26 java\uc0\u8232 
\f4\fs22 \cf4 \cb5 \strokec4 CopyEdit
\f2\fs26 \cf0 \cb1 \strokec2 \uc0\u8232 \u8232 \u8232 interface Page \{\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls64\ilvl0\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2     void clickLogin();\
\ls64\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \}\
\ls64\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \
\ls64\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 class LoggingHandler implements InvocationHandler \{\
\ls64\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2     Object target;\
\ls64\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2     public Object invoke(...) \{\
\ls64\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2         log(method.getName());\
\ls64\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2         return method.invoke(target, args);\
\ls64\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2     \}\
\ls64\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \}\
\ls64\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \uc0\u8232 \u8232 
\f0\fs24 \
\pard\pardeftab720\partightenfactor0
\cf3 \strokec3 \
\pard\pardeftab720\sa319\partightenfactor0

\f1\b \cf0 \strokec2 8. Scenario: You need to compare two complex test data objects and log field-level differences. How would you do that?\
\pard\pardeftab720\sa240\partightenfactor0
\cf0 \strokec2 Approach:
\f0\b0 \strokec2 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls65\ilvl0\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Override 
\f2\fs26 equals()
\f0\fs24  and 
\f2\fs26 hashCode()
\f0\fs24  if using in collections.\
\ls65\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Use libraries like 
\f1\b Apache Commons Lang3
\f0\b0  
\f2\fs26 EqualsBuilder
\f0\fs24 , or write custom comparator.\
\ls65\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 For structured diff:\uc0\u8232 
\f2\fs26 java\uc0\u8232 
\f4\fs22 \cf4 \cb5 \strokec4 CopyEdit
\f2\fs26 \cf0 \cb1 \strokec2 \uc0\u8232 \u8232 \u8232 if (!obj1.getFieldA().equals(obj2.getFieldA())) log("FieldA mismatch");\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls65\ilvl0\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \uc0\u8232 \u8232 
\f0\fs24 \
\pard\pardeftab720\partightenfactor0
\cf3 \strokec3 \
\pard\pardeftab720\sa319\partightenfactor0

\f1\b \cf0 \strokec2 9. Scenario: You have a utility method used in many tests. One day, a change to this method breaks 50+ tests. How would you prevent such issues?\
\pard\pardeftab720\sa240\partightenfactor0
\cf0 \strokec2 Best Practices:
\f0\b0 \strokec2 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls66\ilvl0\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Write 
\f1\b unit tests
\f0\b0  for the utility class (JUnit/TestNG).\
\ls66\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Use 
\f1\b interface segregation
\f0\b0 : expose only needed behavior to tests.\
\ls66\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Add 
\f1\b versioning
\f0\b0  or deprecate with warnings before major changes.\
\pard\pardeftab720\partightenfactor0
\cf3 \strokec3 \
\pard\pardeftab720\sa319\partightenfactor0

\f1\b \cf0 \strokec2 10. Scenario: Your test framework needs to support different browsers/devices. How do you design a factory pattern in Java to support this?\
\pard\pardeftab720\sa240\partightenfactor0
\cf0 \strokec2 Design Example:
\f0\b0 \strokec2 \
\pard\pardeftab720\partightenfactor0

\f2\fs26 \cf0 \strokec2 java\
\pard\pardeftab720\partightenfactor0

\f4\fs22 \cf4 \cb5 \strokec4 CopyEdit
\f2\fs26 \cf0 \cb1 \strokec2 \
public interface DriverManager \{\
    WebDriver getDriver();\
\}\
\
public class ChromeDriverManager implements DriverManager \{\
    public WebDriver getDriver() \{\
        return new ChromeDriver();\
    \}\
\}\
\
public class DriverFactory \{\
    public static DriverManager getManager(String type) \{\
        switch (type) \{\
            case "chrome": return new ChromeDriverManager();\
            case "firefox": return new FirefoxDriverManager();\
            default: throw new IllegalArgumentException("Invalid type");\
        \}\
    \}\
\}\
\pard\pardeftab720\partightenfactor0

\f0\fs24 \cf3 \strokec3 \
\pard\pardeftab720\sa319\partightenfactor0

\f1\b \cf0 \strokec2 11. Scenario: Your team uses TestNG. You want to run tests in parallel but each test should get a fresh WebDriver. How would you ensure thread safety using Java?\
\pard\pardeftab720\sa240\partightenfactor0
\cf0 \strokec2 Solution:
\f0\b0 \strokec2 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls67\ilvl0\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Use 
\f2\fs26 ThreadLocal<WebDriver>
\f0\fs24 :\uc0\u8232 
\f2\fs26 java\uc0\u8232 
\f4\fs22 \cf4 \cb5 \strokec4 CopyEdit
\f2\fs26 \cf0 \cb1 \strokec2 \uc0\u8232 \u8232 \u8232 public class DriverFactory \{\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls67\ilvl0\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2     private static ThreadLocal<WebDriver> driver = new ThreadLocal<>();\
\ls67\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2     public static WebDriver getDriver() \{ return driver.get(); \}\
\ls67\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2     public static void setDriver(WebDriver drv) \{ driver.set(drv); \}\
\ls67\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \}\
\ls67\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \uc0\u8232 \u8232 
\f0\fs24 \
\pard\pardeftab720\partightenfactor0
\cf3 \strokec3 \
\pard\pardeftab720\sa319\partightenfactor0

\f1\b \cf0 \strokec2 12. Scenario: How would you create a chain of fluent method calls in a Java class (Fluent Interface)?\
\pard\pardeftab720\sa240\partightenfactor0
\cf0 \strokec2 Example:
\f0\b0 \strokec2 \
\pard\pardeftab720\partightenfactor0

\f2\fs26 \cf0 \strokec2 java\
\pard\pardeftab720\partightenfactor0

\f4\fs22 \cf4 \cb5 \strokec4 CopyEdit
\f2\fs26 \cf0 \cb1 \strokec2 \
public class LoginPage \{\
    public LoginPage enterUsername(String user) \{\
        // enter user\
        return this;\
    \}\
\
    public LoginPage enterPassword(String pass) \{\
        // enter pass\
        return this;\
    \}\
\
    public HomePage clickLogin() \{\
        // click login\
        return new HomePage();\
    \}\
\}\
\
// Usage:\
new LoginPage().enterUsername("admin").enterPassword("pass").clickLogin();\
\pard\pardeftab720\partightenfactor0

\f0\fs24 \cf3 \strokec3 \
\pard\pardeftab720\sa319\partightenfactor0

\f1\b \cf0 \strokec2 13. Scenario: You want to implement a centralized error handling/logging mechanism. How do you design it in Java?\
\pard\pardeftab720\sa240\partightenfactor0
\cf0 \strokec2 Answer:
\f0\b0 \strokec2 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls68\ilvl0\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Use a utility class with static logging methods.\
\ls68\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Optionally, create a 
\f1\b custom exception hierarchy
\f0\b0 :\uc0\u8232 
\f2\fs26 java\uc0\u8232 
\f4\fs22 \cf4 \cb5 \strokec4 CopyEdit
\f2\fs26 \cf0 \cb1 \strokec2 \uc0\u8232 \u8232 \u8232 public class AutomationException extends RuntimeException \{\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls68\ilvl0\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2     public AutomationException(String msg) \{\
\ls68\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2         super(msg);\
\ls68\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2         Logger.log(msg);\
\ls68\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2     \}\
\ls68\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \}\
\ls68\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \uc0\u8232 \u8232 
\f0\fs24 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls68\ilvl0\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Use Java's 
\f2\fs26 Logger
\f0\fs24 , 
\f2\fs26 SLF4J
\f0\fs24 , or 
\f2\fs26 Log4j2
\f0\fs24  for logging flexibility.\
\pard\pardeftab720\partightenfactor0
\cf3 \strokec3 \
\pard\pardeftab720\sa240\partightenfactor0
\cf0 \strokec2 Would you like the 
\f1\b \strokec2 answers coded in a repo-style class structure
\f0\b0 \strokec2 , or would you prefer 
\f1\b \strokec2 mock interview drills based on these scenarios
\f0\b0 \strokec2 ?\
Let me know how you'd like to proceed \'97 I can also help tailor these for 
\f1\b \strokec2 specific interview rounds
\f0\b0 \strokec2 .\
\pard\pardeftab720\qc\partightenfactor0

\f4\fs22 \cf4 \strokec4 \
\pard\pardeftab720\partightenfactor0

\f0\fs24 \cf0 \strokec2 \
\
\
\
\
\
\pard\pardeftab720\sa240\partightenfactor0
\cf0 \strokec2 \
\pard\pardeftab720\partightenfactor0
\cf0 \strokec2 \
\
\
\pard\pardeftab720\partightenfactor0

\f4\fs22 \cf4 \cb5 \strokec4 Tools
\f0\fs24 \cf0 \cb1 \strokec2 \
\
\
\pard\pardeftab720\qc\partightenfactor0

\f4\fs22 \cf4 \strokec4 \
\pard\pardeftab720\partightenfactor0

\f0\fs24 \cf0 \strokec2 \
}